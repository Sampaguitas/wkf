{"version":3,"sources":["helpers/history.js","components/input-icon.js","assets/logo.jpg","assets/rdb.svg","pages/account/login.js","pages/account/reqpwd.js","pages/account/resetpwd.js","pages/account/notfound.js","helpers/auth-header.js","functions/copyObject.js","functions/getPageSize.js","functions/arrayRemove.js","components/table-select-all.js","components/table-select-row.js","components/table-header.js","functions/typeToString.js","functions/getDateFormat.js","components/table-data.js","components/table-check-box-admin.js","components/input.js","components/header-bar-menu.js","assets/icon.svg","components/side-bar-sub-item.js","components/side-bar-item.js","components/side-bar-menu.js","components/footer.js","components/layout.js","components/modal.js","components/pagination.js","components/param.js","pages/account/settings.js","pages/account/user.js","components/tab-stock-location.js","components/tab-stock-article.js","components/tab-stock-purchase.js","components/tab-stock-suppliers.js","components/tab-stock-params.js","pages/home/stock.js","pages/home/buyout.js","pages/home/export.js","pages/home/import.js","app/app.js","reportWebVitals.js","index.js"],"names":["createBrowserHistory","InputIcon","props","state","show","togglePassword","bind","event","preventDefault","this","setState","submitted","value","icon","name","type","onChange","placeholder","autoComplete","title","className","required","onClick","React","Component","Login","email","password","loggingIn","alert","message","handleChange","handleLogin","localStorage","removeItem","target","requestOptions","method","headers","body","JSON","stringify","fetch","process","REACT_APP_API_URI","then","response","text","data","parse","resMsg","statusText","status","token","setItem","history","push","window","location","reload","catch","id","src","logo","alt","rdb","onSubmit","to","pathname","tag","ReqPwd","requesting","menuItem","handleRequest","ResetPwd","user","userId","newPwd","resetting","handleReset","console","log","search","qs","queryString","withRouter","NotFound","useLocation","authHeader","getItem","copyObject","mainObj","_","isEmpty","key","objCopy","getPageSize","clientHeight","Math","floor","arrayRemove","arr","filter","ele","TableSelectAll","checked","style","width","minWidth","alignItems","justifyContent","margin","color","padding","textAlign","verticalAlign","cursor","TableSelectRow","fieldValue","callback","prevProps","selectAllRows","selectedRows","includes","TableHeader","clientXStart","parentWidth","onDragStart","onDragEnd","clientX","parentElement","offsetWidth","index","setColWidth","distanceX","max","textNoWrap","sort","toggleSort","settingsColWidth","colDoubleClick","whiteSpace","role","textOverflow","overflow","hasOwnProperty","maxWidth","isAscending","position","top","bottom","right","height","zIndex","draggable","onDoubleClick","typeToString","fieldType","myDateFormat","String","moment","utc","format","Intl","NumberFormat","round","Number","EPSILON","locale","DateTimeFormat","resolvedOptions","options","day","timeZone","getDateFormat","formatToParts","reduce","acc","cur","TableData","colIndex","align","handleClick","handleDownlaod","eventId","paddingLeft","isUndefined","TableCheckBoxAdmin","updating","prevState","_id","refreshStore","setAlert","isAdmin","disabled","data-type","Input","inline","htmlFor","HeaderBarMenu","e","collapsed","toggleCollapse","SubItem","item","href","marginLeft","child","map","subitem","Item","SideBarMenu","listMenu","handleItemOver","tempArray","undefined","generateMenu","Footer","Date","getFullYear","Layout","children","Modal","tabIndex","display","overflowY","size","centered","hideModal","data-dismiss","aria-label","aria-hidden","Pagination","currentPage","pageLast","first","second","third","firstItem","lastItem","pageItems","totalItems","changePage","Param","handleNextDropdown","thisList","document","getElementById","addEventListener","scrollTop","scrollHeight","focused","onFocus","onHover","hover","selection","handleSelect","toggleDropDown","isEqual","hidden","faTimes","faChevronDown","option","onMouseEnter","selected","Settings","currentUser","element","elements","dropdown","params","page","retrieving","exporting","upserting","loading","loaded","showSearch","showUser","paginate","pageSize","resize","handleClearAlert","toggleModalSearch","showModal","handleChangeUser","handleClearFields","getDropdownOptions","handleChangeDropdown","handleSelectDropdown","onFocusDropdown","onHoverDropdown","toggleSelectAllRow","updateSelectedRows","getDocuments","handleSubmit","handleDelete","handleOnclick","generateBody","tableContainer","remaining","found","find","nextPage","deleting","tempRows","i","blur","myInput","focus","select","Object","keys","isFocused","User","fontSize","TabStockLocation","article","retrievingArticle","scope","address","postalcode","city","country","tel","fax","price_info","TabStockArticle","vlunar","artNr","qty","uom","weight","price","gip","rv","TabStockPurchase","purchase","supplier","firstInStock","deliveryDate","TabStockSuppliers","names","qtys","TabStockParams","parameters","sizeOne","sizeTwo","sizeThree","wallOne","wallTwo","grade","length","end","surface","Stock","opco","description","tags","stocks","pffType","steelType","tabs","label","component","active","isLoaded","retrievingStocks","exportingParams","exportingStocks","showArticle","handleExport","getArticle","toggleModalArticle","handleModalTabClick","selectedIds","stock","currency","tab","forEach","t","data-toggle","aria-controls","aria-labelledby","BuyOut","Export","createdAt","expiresAt","interval","setInterval","clearInterval","exportId","downloadingExport","ok","blob","saveAs","createdAtX","expiresAtX","Import","showParam","paramName","paramKey","now","uploadingParam","downloadingParam","toggleParam","handleChangeParam","handleDownloadParam","handleUploadParam","paramInput","createRef","files","responce","current","FormData","append","getDocument","marginRight","paddingRight","encType","ref","opacity","pointerEvents","library","add","fas","far","fal","App","path","PrivateRoute","exact","rest","render","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.b1e3e5a6.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default class InputIcon extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: false\n        }\n        this.togglePassword = this.togglePassword.bind(this);\n    }\n\n    togglePassword(event) {\n        event.preventDefault();\n        const { show } = this.state;\n        this.setState({show: !show });\n    }\n\n    render() {\n        const { show } = this.state;\n        const {submitted, value, icon, name, type, onChange, placeholder, autoComplete, title} = this.props;\n        return (\n            <div className={'form-group' + (submitted && !value ? ' has-error' : '')}>\n                <div className=\"input-group no-select\">\n                    <div className=\"input-group-prepend\">\n                        <div className=\"input-group-text\">\n                            <FontAwesomeIcon icon={icon} />\n                        </div>\n                    </div>\n                    <input\n                        className=\"form-control\"\n                        name={name}\n                        type={show ? 'text' : type}\n                        value={value}\n                        onChange={onChange}\n                        placeholder={placeholder}\n                        autoComplete={autoComplete}\n                        required\n                    />\n                    {type === 'password' &&\n                        <div className=\"input-group-append\">\n                            <div type=\"button\" className=\"input-group-text\" onClick={event => this.togglePassword(event)}>\n                                <FontAwesomeIcon icon={show ? \"eye-slash\" : \"eye\" }/>\n                            </div>\n                        </div>\n                    }\n                </div>\n                {submitted && !value &&\n                    <div className=\"help-block\">{title} is required</div>\n                }\n            </div>\n        );\n        \n    }\n};","export default __webpack_public_path__ + \"static/media/logo.69d292ad.jpg\";","export default __webpack_public_path__ + \"static/media/rdb.86485dab.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport history from \"../../helpers/history\";\nimport InputIcon from \"../../components/input-icon\";\nimport logo from \"../../assets/logo.jpg\";\nimport rdb from \"../../assets/rdb.svg\";\n\nexport default class Login extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          email: \"\",\n          password: \"\",\n          loggingIn: false,\n          alert: {\n            type: \"\",\n            message: \"\"\n          }\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n    }\n\n    componentDidMount() {\n        localStorage.removeItem(\"user\");\n    }\n    \n    handleChange(event) {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n    \n    handleLogin(event) {\n        event.preventDefault();\n        const { email, password, loggingIn } = this.state;\n        if (!!email && !!password && !loggingIn) {\n            this.setState({\n            loggingIn: true\n            }, () => {\n                const requestOptions = {\n                    method: \"POST\",\n                    headers: { \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({ email, password })\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/users/login`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                    loggingIn: false,\n                    }, () => {\n                    const data = text && JSON.parse(text);\n                    const resMsg = (data && data.message) || response.statusText;\n                    if (response.status === 401) {\n                        localStorage.removeItem(\"user\");\n                    } else if (!!data.token) {\n                        localStorage.setItem(\"user\", JSON.stringify(data));\n                        history.push(\"/\");\n                        window.location.reload();\n                    } else {\n                        this.setState({\n                        alert: {\n                            type: response.status === 200 ? \"alert-success\" : \"alert-danger\",\n                            message: resMsg\n                        }\n                        });\n                    }\n                    });\n                }).catch( () => {\n                    localStorage.removeItem(\"user\");\n                }));\n            });\n        }\n    }\n\n    render() {\n        const { alert, email, password, loggingIn } = this.state;\n        return(\n            <div id=\"login-card\" className=\"row justify-content-center align-self-center\">\n                <div className=\"card card-login\">\n                    <div className=\"card-body\">\n                        <img src={logo} className=\"img-fluid\" alt=\"Van Leeuwen Pipe and Tube\"/>\n                    <br />\n                    <img src={rdb} className=\"img-fluid mt-2\" alt=\"Reconciliation Database\" />\n                    <hr />\n                    <form name=\"form\" onSubmit={this.handleLogin}>\n                        <InputIcon\n                            title=\"Email\"\n                            name=\"email\"\n                            type=\"email\"\n                            value={email}\n                            onChange={this.handleChange}\n                            placeholder=\"Email\"\n                            icon=\"user\"\n                            submitted={loggingIn}\n                            autoComplete=\"email\"\n                        />\n                        <InputIcon\n                            title=\"Password\"\n                            name=\"password\"\n                            type=\"password\"\n                            value={password}\n                            onChange={this.handleChange}\n                            placeholder=\"Password\"\n                            icon=\"lock\"\n                            submitted={loggingIn}\n                            autoComplete=\"current-password\"\n                        />\n                        <hr />\n                        <button type=\"submit\" className=\"btn btn-sm btn-block btn-leeuwen\"> \n                            <span><FontAwesomeIcon icon={loggingIn ? \"spinner\" : \"sign-in-alt\"} className={loggingIn ? \"fa-pulse fa fa-fw mr-2\" : \"fa mr-2\"}/>Login</span>\n                        </button>\n                        <NavLink to={{ pathname: \"/reqpwd\" }} className=\"btn btn-link btn-sm\" tag=\"a\">Forgot your password?</NavLink>\n                        <br />\n                        {alert.message && (<div className={`alert ${alert.type}`}>{alert.message}</div>)}\n                    </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport InputIcon from \"../../components/input-icon\";\nimport logo from \"../../assets/logo.jpg\"; //logo.svg\nimport rdb from \"../../assets/rdb.svg\";\n\nexport default class ReqPwd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      requesting: false,\n      menuItem: \"\",\n      alert: {\n        type: \"\",\n        message: \"\"\n      }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleRequest = this.handleRequest.bind(this);\n  }\n\n  componentDidMount() {\n    localStorage.removeItem(\"user\");\n  }\n\n  handleChange(event) {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleRequest(event) {\n    event.preventDefault();\n    const { email, requesting } = this.state;\n    if (!!email && !requesting) {\n      this.setState({\n        requesting: true\n      }, () => {\n        const requestOptions = {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({email})\n        };\n        return fetch(`${process.env.REACT_APP_API_URI}/server/users/reqPwd`, requestOptions)\n        .then(response => response.text().then(text => {\n          this.setState({\n            requesting: false,\n          }, () => {\n            const data = text && JSON.parse(text);\n            const resMsg = (data && data.message) || response.statusText;\n            if (response.status === 401) {\n              localStorage.removeItem(\"user\");\n              window.location.reload();\n            } else {\n              this.setState({\n                alert: {\n                  type: response.status === 200 ? \"alert-success\" : \"alert-danger\",\n                  message: resMsg\n                }\n              });\n            }\n          });\n        }));\n      });\n    }\n  }\n\n  render() {\n    const { alert, email, requesting } = this.state;\n    return (\n      <div\n        id=\"requestpwd-card\"\n        className=\"row justify-content-center align-self-center\"\n      >\n      <div className=\"card card-login\">\n          <div className=\"card-body\">\n              <img\n                  src={logo}\n                  className=\"img-fluid\"\n                  alt=\"Van Leeuwen Pipe and Tube\"\n              />\n              <br />\n              <img src={rdb} className=\"img-fluid mt-2\" alt=\"Reconciliation Database\" />\n              <hr />\n              <p>Please provide your email address and we\"ll send you instructions on how to change your password.</p>\n              <form\n                  name=\"form\"\n                  onSubmit={this.handleRequest}\n              >\n                  <InputIcon\n                    title=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    placeholder=\"Email\"\n                    icon=\"user\"\n                    requesting={requesting}\n                    autoComplete=\"email\"\n                  />\n                  <hr />\n                  <button type=\"submit\" className=\"btn btn-sm btn-block btn-leeuwen\">\n                    <span><FontAwesomeIcon icon={requesting ? \"spinner\" : \"hand-point-right\"} className={requesting ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"}/>Submit</span>\n                  </button>\n                  <NavLink to={{ pathname: \"/login\" }} className=\"btn btn-link btn-sm\" tag=\"a\"> Go back to login page</NavLink>\n                  <br />\n                  {alert.message && <div className={`alert ${alert.type}`}>{alert.message}</div>}\n              </form>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}","import React from \"react\";\nimport { NavLink, withRouter } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport InputIcon from \"../../components/input-icon\";\nimport logo from \"../../assets/logo.jpg\";\nimport rdb from \"../../assets/rdb.svg\";\n\nclass ResetPwd extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        user: {\n            userId: \"\",\n            token: \"\",\n            newPwd: \"\",\n        },\n        resetting: false,\n        alert: {\n          type: \"\",\n          message: \"\"\n        }\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  componentDidMount() {\n    const { location } = this.props;\n    const { user } = this.state;\n    console.log(location.search);\n    var qs = queryString.parse(location.search);\n    if (qs.id && qs.token) {\n        this.setState({\n            user: {\n                ...user,\n                userId: qs.id,\n                token: qs.token\n            }\n        });\n    }\n    localStorage.removeItem(\"user\");\n  }\n\n  handleChange(event) {\n    const { user } = this.state;\n    const { name, value } = event.target;\n    this.setState({\n        user: {\n            ...user,\n            [name]: value\n        }\n    });\n  }\n\n  handleReset(event) {\n    event.preventDefault();\n    const { user, resetting } = this.state;\n    console.log(\"user.userId:\", user.userId);\n    console.log(\"user.token:\", user.token);\n    console.log(\"user.newPwd:\", user.newPwd);\n    console.log(\"resetting:\", resetting);\n    if (!!user.userId && !!user.token && !!user.newPwd && !resetting) {\n      \n      this.setState({\n        resetting: true\n      }, () => {\n        const requestOptions = {\n          method: \"PUT\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            token: user.token,\n            newPwd: user.newPwd\n          })\n        };\n        return fetch(`${process.env.REACT_APP_API_URI}/server/users/resetPwd/${user.userId}`, requestOptions)\n        .then(response => response.text().then(text => {\n          this.setState({\n            resetting: false,\n          }, () => {\n            const data = text && JSON.parse(text);\n            const resMsg = (data && data.message) || response.statusText;\n            if (response.status === 401) {\n              localStorage.removeItem(\"user\");\n              window.location.reload();\n            } else {\n              this.setState({\n                alert: {\n                  type: response.status === 200 ? \"alert-success\" : \"alert-danger\",\n                  message: resMsg\n                }\n              });\n            }\n          });\n        }));\n      });\n    }\n  }\n\n  render() {\n    const { alert, user, resetting } = this.state;\n    return (\n      <div\n        id=\"resetpwd-card\"\n        className=\"row justify-content-center align-self-center\"\n      >\n      <div className=\"card card-login\">\n          <div className=\"card-body\">\n              <img\n                  src={logo}\n                  className=\"img-fluid\"\n                  alt=\"Van Leeuwen Pipe and Tube\"\n              />\n              <br />\n              <img src={rdb} className=\"img-fluid mt-2\" alt=\"Reconciliation Database\" />\n              <hr />\n              <p>Type you new password.</p>\n              <form\n                  name=\"form\"\n                  onSubmit={this.handleReset}\n              >\n                  <InputIcon\n                      title=\"New Password\"\n                      name=\"newPwd\"\n                      type=\"password\"\n                      value={user.newPwd}\n                      onChange={this.handleChange}\n                      placeholder=\"New Password\"\n                      icon=\"lock\"\n                      resetting={resetting}\n                      autoComplete=\"new-password\"\n                      required\n                  />\n                  <hr />\n                  <button type=\"submit\" className=\"btn btn-sm btn-block btn-leeuwen\">\n                    <span><FontAwesomeIcon icon={resetting ? \"spinner\" : \"hand-point-right\"} className={resetting ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"}/>Reset</span>\n                  </button>\n                  <NavLink to={{ pathname: \"/login\" }} className=\"btn btn-link\" tag=\"a\">Go back to login page</NavLink>\n                  <br />\n                  {alert.message && <div className={`alert ${alert.type}`}>{alert.message}</div>}\n              </form>\n              </div>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ResetPwd);","import { useLocation } from \"react-router-dom\";\n\nexport default function NotFound() {\n    let location = useLocation();\n    return (\n        <article>\n            <header>\n                <h2>#404 Page Not Found</h2>\n            </header>\n            <p>The requested URL <code>{location.pathname}</code> could not found be on this server.</p>\n        </article>\n    );\n}","export default function authHeader() {\n    let user = JSON.parse(localStorage.getItem('user'));\n    if (user && user.token) {\n        return { 'Authorization': user.token };\n    } else {\n        return {};\n    }\n}","import _ from \"lodash\";\n\nexport default function copyObject(mainObj) {\n    if (!!mainObj && !_.isEmpty(mainObj)) {\n        let objCopy = {};\n        let key;\n    \n        for (key in mainObj) {\n            objCopy[key] = mainObj[key];\n        }\n        return objCopy;\n    } else {\n        return {};\n    }\n}","export default function getPageSize(clientHeight) {\n    return Math.floor(((clientHeight - 53) / 33));\n}","export default function arrayRemove(arr, value) {\n    return arr.filter(function(ele){\n        return ele !== value;\n    });\n}","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './table-select-all.css'\n\nclass TableSelectAll extends Component {\n    render(){\n        const {\n            checked,\n            onChange,\n        } = this.props;\n        return (\n            <th\n                style={{\n                    width: '30px',\n                    minWidth: '30px',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n            >\n                <label\n                    className=\"fancy-table-selection-all-row\"\n                    style={{margin: '0px'}}\n                >\n                    <input\n                        type=\"checkbox\"\n                        name=\"fieldValue\"\n                        checked={checked}\n                        onChange={onChange}\n                    />\n                    <FontAwesomeIcon\n                        icon=\"check\"\n                        className=\"checked fa-lg\"\n                        style={{\n                            color: '#0070C0',\n                            padding: 'auto',\n                            textAlign: 'center',\n                            width: '100%',\n                            margin: '0px',\n                            verticalAlign: 'middle',\n                            cursor: 'pointer'\n                        }}\n                    /> \n                    <FontAwesomeIcon\n                        icon=\"check\"\n                        className=\"unchecked fa-lg\"\n                        style={{\n                            color: '#adb5bd',\n                            padding: 'auto',\n                            textAlign: 'center',\n                            width: '100%',\n                            margin: '0px',\n                            verticalAlign: 'middle',\n                            cursor: 'pointer'\n                        }}\n                    />\n                </label>\n            </th>\n        );\n    }\n};\n\nexport default TableSelectAll;\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './table-select-row.css'\n\nclass TableSelectRow extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fieldValue: false,\n        }\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(event) {\n        const { callback, id } = this.props;\n        this.setState({\n            fieldValue: event.target.checked\n        }, () => callback(id))\n    }\n\n    componentDidUpdate(prevProps) {\n        const { selectAllRows, selectedRows, id } = this.props;\n        if(selectAllRows !== prevProps.selectAllRows) {\n            this.setState({\n                fieldValue: selectAllRows\n            });\n        }\n\n        if (selectedRows !== prevProps.selectedRows) {\n            if (selectedRows.includes(id)) {\n                this.setState({\n                    fieldValue: true\n                });\n            } else {\n                this.setState({\n                    fieldValue: false\n                });\n            }\n        }\n    }\n\n    render(){\n        const { fieldValue } = this.state;\n        return (\n            <th\n                style={{\n                    width: '30px',\n                    minWidth: '30px',\n                    alignItems: 'center',\n                    justifyContent: 'center'\n                }}\n            >\n                <label\n                    className=\"fancy-table-selection-row\"\n                    style={{margin: '0px'}}>\n                    <input\n                        type=\"checkbox\"\n                        name=\"fieldValue\"\n                        checked={fieldValue}\n                        onChange={this.onChange}\n                    />\n                    <FontAwesomeIcon\n                        icon=\"check\"\n                        className=\"checked fa-lg\"\n                        style={{\n                            color: '#0070C0',\n                            padding: 'auto',\n                            textAlign: 'center',\n                            width: '100%',\n                            margin: '0px',\n                            verticalAlign: 'middle',\n                            cursor: 'pointer'\n                        }}\n                    /> \n                    <FontAwesomeIcon\n                        icon=\"check\"\n                        className=\"unchecked fa-lg\"\n                        style={{\n                            color: '#adb5bd',\n                            padding: 'auto',\n                            textAlign: 'center',\n                            width: '100%',\n                            margin: '0px',\n                            verticalAlign: 'middle',\n                            cursor: 'pointer'\n                        }}\n                    />\n                </label>\n            </th>\n        );\n    }\n};\n\nexport default TableSelectRow;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default class TableHeader extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            clientXStart: 0,\n            parentWidth: 0,\n\n        }\n        this.onDragStart = this.onDragStart.bind(this);\n        this.onDragEnd = this.onDragEnd.bind(this);\n    }\n\n    onDragStart(event) {\n        this.setState({\n            clientXStart: event.clientX,\n            parentWidth: event.target.parentElement.offsetWidth\n        });\n    }\n\n    onDragEnd(event) {\n        const { index, setColWidth } = this.props;\n        const { clientXStart, parentWidth } = this.state;\n        let distanceX = event.clientX - clientXStart;\n        setColWidth(index, Math.max(parentWidth + distanceX, 10))\n    }\n\n    render() {\n        \n        const { title, name, width, textNoWrap, sort, toggleSort, index, settingsColWidth, colDoubleClick } = this.props;\n        return (\n            <th \n                style={{\n                    width: `${width ? width : \"auto\"}`,\n                    whiteSpace: `${textNoWrap ? \"nowrap\" : \"auto\"}`,\n                    padding: \"0px\"\n                }}\n            >\n                <div role=\"button\" className=\"btn-header\" onClick={event => toggleSort(event, name)}>\n                    <span\n                        className=\"btn-header-title no-select\"\n                        style={{\n                            textOverflow: \"ellipsis\",\n                            overflow: \"hidden\", \n                            minWidth: !settingsColWidth.hasOwnProperty(index) ? 0 : (!!settingsColWidth[index] ? `${settingsColWidth[index]}px` : \"10px\"),\n                            maxWidth: !settingsColWidth.hasOwnProperty(index) ? \"none\" : (!!settingsColWidth[index] ? `${settingsColWidth[index]}px` : \"35px\")\n                        }}\n                    >\n                        {title}\n                    </span>\n                    <span className=\"btn-header-icon\">\n                        {sort.name === name && sort.isAscending ?\n                            <FontAwesomeIcon icon=\"sort-up\" className=\"btn-header-icon__icon\"/>\n                        : sort.name === name && !sort.isAscending &&\n                            <FontAwesomeIcon icon=\"sort-down\" className=\"btn-header-icon__icon\"/>\n                        }\n                    </span>\n                </div>\n                <div\n                    id=\"draggable-column\"\n                    role=\"button\"\n                    style={{\n                        position: \"absolute\",\n                        top: \"0px\",\n                        bottom: \"0px\",\n                        right: \"0px\",\n                        width:\"3px\",\n                        height: \"auto\",\n                        zIndex: \"2\",\n                        cursor: \"col-resize\"\n                    }}\n                    draggable\n                    onDragStart={event => this.onDragStart(event)}\n                    onDragEnd={event => this.onDragEnd(event)}\n                    onDoubleClick={event => colDoubleClick(event, index)}\n                >\n\n                </div>\n            </th>\n        );\n    }\n}","import moment from \"moment\";\n\nexport default function typeToString (fieldValue, fieldType, myDateFormat) {\n    switch (fieldType) {\n        case 'date': return !fieldValue ? \"\" : String(moment.utc(fieldValue).format(myDateFormat));\n        case 'number': return !fieldValue ? 0 : String(new Intl.NumberFormat().format(Math.round((fieldValue + Number.EPSILON) * 100) / 100));\n        default: return !fieldValue ? \"\" : fieldValue;\n    }\n}","const locale = Intl.DateTimeFormat().resolvedOptions().locale;\nconst options = {'year': 'numeric', 'month': '2-digit', day: '2-digit', timeZone: 'GMT'};\n\nexport default function getDateFormat() {\n\treturn Intl.DateTimeFormat(locale, options).formatToParts().reduce(function (acc, cur) {\n  \t\tswitch(cur.type) {\n    \t\tcase \"day\": return acc + \"DD\";\n    \t\tcase \"month\": return acc + \"MM\";\n    \t\tcase \"year\": return acc + \"YYYY\";\n    \t\tcase \"literal\": return acc + cur.value;\n    \t\tdefault: return acc;\n  \t\t}\n\t}, \"\");\n}","import React from \"react\";\nimport typeToString from \"../functions/typeToString\";\nimport getDateFormat from \"../functions/getDateFormat\";\nimport _ from \"lodash\";\n\nexport default class TableData extends React.Component{\n    render() {\n        const { colIndex, value, type, align, settingsColWidth, handleClick, handleDownlaod, eventId} = this.props\n        return (\n            <td\n              style={{\n                width: \"auto\",\n                whiteSpace: \"nowrap\",\n                paddingLeft: \"5px\",\n                textOverflow: \"ellipsis\",\n                textAlign: align || \"left\",\n                overflow: \"hidden\",\n                minWidth: _.isUndefined(settingsColWidth) || !settingsColWidth.hasOwnProperty(colIndex) ? 0 : (!!settingsColWidth[colIndex] ? `${settingsColWidth[colIndex]}px` : \"10px\"),\n                maxWidth: _.isUndefined(settingsColWidth) || !settingsColWidth.hasOwnProperty(colIndex) ? \"none\" : (!!settingsColWidth[colIndex] ? `${settingsColWidth[colIndex]}px` : \"35px\")\n              }}\n              onClick={event => !!handleClick && !!eventId && value !== \"complete\" ? handleClick(event, eventId) : event.preventDefault()}\n            >\n              {!!handleDownlaod && eventId && value === \"complete\" ? (\n                <button type=\"button\" className=\"btn btn-sm btn-link p-0 shadow-none\" onClick={event => handleDownlaod(event, eventId)}>Download</button>\n                // typeToString(value, type, getDateFormat())\n              ):(\n                typeToString(value, type, getDateFormat())\n              )\n              }\n            </td>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport authHeader from \"../helpers/auth-header\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./table-check-box-admin.css\"\n\nexport default class TableCheckBoxAdmin extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            checked: false,\n            updating: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        const { checked } = this.props;\n        this.setState({ checked: checked });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { checked } = this.props;\n        if (checked !== prevProps.checked) {\n            this.setState({ checked: checked });\n        }\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        const { checked } = this.state;\n        const { _id, refreshStore, setAlert } = this.props;\n        this.setState({\n            updating: true,\n        }, () => {\n            const requestOptions = {\n                method: \"PUT\",\n                headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ isAdmin: !checked })\n            };\n            return fetch(`${process.env.REACT_APP_API_URI}/server/users/setAdmin/${_id}`, requestOptions)\n            .then(response => response.text().then(text => {\n                this.setState({\n                    updating: false,\n                }, () => {\n                    const data = text && JSON.parse(text);\n                    const resMsg = (data && data.message) || response.statusText;\n                    if (response.status === 401) {\n                        // Unauthorized\n                        localStorage.removeItem(\"user\");\n                        window.location.reload(true);\n                    } else {\n                        this.setState({\n                            checked: response.status !== 200 ? checked : !checked, \n                        }, () => {\n                            refreshStore();\n                            if (response.status !== 200) {\n                                setAlert(response.status !== 200 ? \"alert-danger\" : \"alert-success\", resMsg);\n                            }\n                        });\n                    }\n                });\n            }));\n        });\n    }\n\n    render(){\n        const { checked } = this.state\n         const { disabled } = this.props;\n        return (\n            <label className=\"fancy-table-check-box-admin\" data-type=\"checkbox\">\n            <input\n                name=\"isAdmin\"\n                type=\"checkbox\"\n                checked={checked}\n                onChange={event => this.handleChange(event)}\n                disabled={disabled}\n                data-type=\"checkbox\"\n            />\n            <FontAwesomeIcon\n                data-type=\"checkbox\"\n                icon=\"check-square\"\n                className=\"checked fa-lg\"\n                style={{\n                    color: disabled ? \"#adb5bd\" : \"#0070C0\",\n                    padding: \"auto\",\n                    textAlign: \"center\",\n                    width: \"100%\",\n                    margin: \"0px\",\n                    verticalAlign: \"middle\",\n                    cursor: disabled ? \"auto\" : \"pointer\"\n                }}\n            />\n            <FontAwesomeIcon\n                data-type=\"checkbox\"\n                icon={[\"far\", \"square\"]}\n                className=\"unchecked fa-lg\"\n                style={{\n                    color: disabled ? \"#adb5bd\" : \"#0070C0\",\n                    padding: \"auto\",\n                    textAlign: \"center\",\n                    width: \"100%\",\n                    margin: \"0px\",\n                    verticalAlign: \"middle\",\n                    cursor: disabled ? \"auto\" : \"pointer\"\n                }}\n            /> \n            </label>\n        );\n    }\n};\n","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nclass Input extends Component{\n    constructor(props) {\n        super(props);\n        this.state = { show: false }\n        this.togglePassword = this.togglePassword.bind(this);\n    }\n\n    togglePassword(event) {\n        event.preventDefault();\n        const { show } = this.state;\n        this.setState({show: !show });\n    }\n\n    render() {\n        const { show } = this.state;\n        const { inline, value, name, title, type, onChange, placeholder, disabled, autoComplete} = this.props;\n        return(\n            <div className={'form-group' + (inline ? ' row' : '')}>\n                <label htmlFor={name} className={inline ? \"col-sm-2 col-form-label\" : ''}>{title}</label>\n                <div className={inline ? \"col-sm-10\" : ''}>\n                    <div className=\"input-group input-group-lg input-group-sm\">\n                        <input\n                            className=\"form-control\"\n                            id={name}\n                            name={name}\n                            type={show ? 'text' : type}\n                            value={value}\n                            onChange={onChange}\n                            placeholder={placeholder}\n                            disabled={disabled}\n                            autoComplete={autoComplete}\n                        />\n                        {type === 'password' &&\n                            <div className=\"input-group-append\">\n                                <div type=\"button\" className=\"input-group-text\" onClick={event => this.togglePassword(event)}>\n                                    <FontAwesomeIcon icon={show ? \"eye-slash\" : \"eye\" }/>\n                                </div>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Input;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"../styles/header-bar-menu.css\"\n\nexport default class HeaderBarMenu extends React.Component {\n    render() {\n        var isAdmin = false;\n        try{\n            isAdmin = JSON.parse(localStorage.getItem(\"user\")).isAdmin;\n        } catch(e){}\n        const { collapsed } = this.props;\n        return (\n            <div>\n                <div className = { collapsed ? \"header-bar-menu collapsed\" : \"header-bar-menu\" } >\n                    <nav className={collapsed ? \"navbar navbar-expand-lg navbar-light bg-light sticky-top collapsed\" : \"navbar navbar-expand-lg navbar-light bg-light sticky-top\"} >\n                        <span className={collapsed ? \"navbars collapsed\" : \"navbars\"} onClick={this.props.toggleCollapse} >\n                            <span><FontAwesomeIcon icon=\"bars\" className=\"fa-lg\"/></span>\n                        </span>\n                        <form className=\"form-inline ml-auto pull-right\">\n                            <NavLink to=\"/user\">\n                                <button className=\"btn btn-outline-leeuwen-blue btn-round\" title=\"User-Page\">\n                                    <span><FontAwesomeIcon icon=\"user\" className=\"fa-lg\"/></span>\n                                </button>\n                            </NavLink>\n                            {isAdmin &&\n                                <NavLink to=\"/settings\">\n                                    <button className={\"btn btn-outline-leeuwen-blue btn-round\"} title=\"Settings\">\n                                        <span><FontAwesomeIcon icon=\"cog\" className=\"fa-lg\"/></span>\n                                    </button>\n                                </NavLink>\n                            }\n                            <NavLink to=\"/login\">\n                                <button className=\"btn btn-outline-leeuwen btn-round\" title=\"Log-Out\">\n                                    <span><FontAwesomeIcon icon=\"sign-out-alt\" className=\"fa-lg\"/></span>\n                                </button>\n                            </NavLink>\n                        </form>\n                    </nav>\n                </div>\n            </div>  \n        );\n    }\n}\n\n","export default __webpack_public_path__ + \"static/media/icon.cd1d9eaf.svg\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Item from \"./side-bar-sub-item.js\";\n\nexport default class SubItem extends React.Component {\n\n    render() {\n        const { item, menuItem, show } = this.props\n        return (\n            <li>\n                <NavLink \n                    to={{  pathname: item.href }}\n                    tag=\"a\"\n                    className={`${item.title === menuItem ? \"menu-item__selected\" : \"menu-item\"}`}\n                >\n                    <FontAwesomeIcon icon={item.icon} className=\"item-icon\" name={item.icon}/>\n                    <span className=\"item-text\" style={{marginLeft: 45}}>{item.title}\n                        {item.child &&\n                            <FontAwesomeIcon icon=\"angle-right\" />\n                        }\n                    </span>\n                </NavLink>\n\n                {item.child &&\n                    <div className=\"dropdown\">\n                        <div className={`show-animation ${show === item.title && \"active\"}`}>\n                            <ul className={`${show === item.title ? \"show-animation-enter-active\" : \"show-animation-leave-active\"}`}>\n                                {item.child.map((subitem) =>\n                                    <Item key={subitem.id} item={subitem}/>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                }\n            </li>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SubItem from \"./side-bar-sub-item.js\"\n\nclass Item extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {show: true}\n    }\n\n    render() {\n        const { menuItem, item, collapsed, show,  } = this.props\n        return (\n            <li>\n                <NavLink\n                    to={{  pathname: item.href }}\n                    tag=\"a\"\n                    className={`${item.title === menuItem ? \"menu-item__selected\" : \"menu-item\"}`}\n                >\n                    <FontAwesomeIcon icon={item.icon} className=\"item-icon\" name={item.icon}/>\n                    <span className=\"item-text\">{item.title}\n                        {item.child &&\n                            <FontAwesomeIcon icon=\"angle-right\" className={`item-arrow ${show === item.title && \"expand\"} float-right`} style={{margin: \"0px\", verticalAlign: \"middle\"}}/>\n                        }\n                    </span>\n                </NavLink>              \n\n                {(!collapsed && item.child) &&\n                    <div className=\"dropdown\">\n                        <div className={`show-animation ${show === item.title && \"active\"}`}>\n                            <ul className={`${show === item.title ? \"show-animation-enter-active\" : \"show-animation-leave-active\"}`}>\n                                {item.child && item.child.map((subitem)=>\n                                    <SubItem key={subitem.id} item={subitem} menuItem={menuItem}/>\n                                )}\n                            </ul>\n                        </div>\n                    </div>\n                }\n            </li>\n        ); \n\n    }\n}\n\nexport default Item;","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport logo from \"../assets/logo.jpg\";//logo.svg\nimport icon from \"../assets/icon.svg\";\nimport Item from \"./side-bar-item.js\"\nimport \"../styles/side-bar-menu.scss\"\n\nexport default class SideBarMenu extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            show: \"\",\n            listMenu: [\n                { id: 0, title: \"Stock\", href: \"/\", icon: \"warehouse\" },\n                { id: 1, title: \"Buy-Out\", href: \"/buyout\", icon: \"shopping-cart\" },\n                { id: 2, title: \"Export data\", href: \"/export\", icon: \"file-upload\" },\n                { id: 3, title: \"Import data\", href: \"/import\", icon: \"file-download\" }\n            ]\n        }\n        this.handleItemOver = this.handleItemOver.bind(this);\n    }\n\n    handleItemOver(event, title){\n        event.preventDefault();\n        this.setState({ show: title });\n    }\n\n    generateMenu() {\n        const { listMenu, show } = this.state;\n        const { menuItem } = this.props;\n        let tempArray = []\n\n        listMenu.map(item => {\n            return tempArray.push(\n                <Item item={item} key={item.id} menuItem={menuItem} show={show} handleItemOver={this.handleItemOver}/>\n            );\n        });\n        \n        return tempArray;\n    }\n\n    render() {\n        const { collapsed } = this.props;\n        return (\n            <div>\n                {localStorage.getItem(\"user\") !== null && \n                    <div id=\"sidebar-menu\" className={collapsed ? \"collapsed\" : undefined}>\n                        <NavLink to={{ pathname: \"/\" }} tag=\"div\" className=\"sidebar-logo\">\n                            <img alt=\"logo\" src={collapsed ? icon : logo} />\n                        </NavLink>\n                        <ul className=\"default-list menu-list\">\n                            {this.generateMenu()}\n                        </ul>\n                        <button className=\"collapse-btn\" onClick={this.props.toggleCollapse}>\n                        <FontAwesomeIcon icon=\"arrows-alt-h\" name=\"arrows-alt-h\" />\n                        </button>\n\n                    </div>\n                }\n            </div>\n        );\n    }\n}","import \"../styles/footer.css\";\n\nexport default function Footer() {\n    return (\n        <div>\n            <footer className=\"footer fixed-bottom bg-light text-right\" >\n                    <span className=\"text-muted no-select footer-text mr-3\">\n                        © {(new Date().getFullYear())} - Van Leeuwen Pipe and Tube. All rights reserved (v0.1.0) - {process.env.NODE_ENV}\n                    </span>\n            </footer>\n        </div>\n    );\n}","import React from \"react\";\nimport HeaderBarMenu from \"./header-bar-menu\";\nimport SideBarMenu from \"./side-bar-menu\";\nimport Footer from \"./footer.js\";\n// import \"../styles/bootstrap.min.css\";\n\nexport default class Layout extends React.Component {\n    render() {\n        const { menuItem, collapsed, toggleCollapse } = this.props;\n        return (\n            <div className=\"full-height\">\n                <div className=\"full-height\">\n                    <HeaderBarMenu id=\"headerbar\" className={collapsed ? \"collapsed\" : \"\"} collapsed={collapsed} toggleCollapse={toggleCollapse}/>\n                    <SideBarMenu className={collapsed ? \"collapsed\" : \"\"} menuItem={menuItem} collapsed={collapsed} toggleCollapse={toggleCollapse}/>\n                        <div id=\"content\" className={collapsed ? \"collapsed\" : \"\"} style={{height: `calc(100% - 100px)`}}>\n                            {this.props.children}\n                        </div>\n                    <Footer />\n                </div>\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"../styles/modal.css\";\n\nexport default class Modal extends React.Component {\n  render() {\n    if(!this.props.show){\n        return null;\n    }\n    return (\n        <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" style={{display: \"block\", overflowY: \"auto\"}}>\n            <div className={`modal-dialog${this.props.size ? \" \" + this.props.size : \"\"}${this.props.centered ? \" modal-dialog-centered\" : \"\"}`} role=\"document\">\n                <div className=\"modal-content\">\n                    <div className=\"modal-header\">\n                        <h5 className=\"modal-title\">{this.props.title}</h5>\n                        <button type=\"button\" className=\"close\" onClick={this.props.hideModal} data-dismiss=\"modal\" aria-label=\"Close\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                    </div>\n                    <div className=\"modal-body\">\n                        {this.props.children}\n                    </div>     \n                </div>\n            </div> \n        </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport \"../styles/pagination.css\";\n\nexport default class Pagination extends Component {\n\n    render() {\n        const { currentPage, pageLast, first, second, third, firstItem, lastItem, pageItems, totalItems, changePage } = this.props\n        return (\n            <div className=\"pagination-row row ml-1 mr-1\">\n                <div className=\"pagination-col col\">\n                    <nav aria-label=\"Page navigation\" className=\"pagination-nav\">\n                        <ul className=\"pagination\">\n                            <li className={currentPage === 1 ? \"page-item disabled\" : \"page-item\"}>\n                                <button className=\"page-link\" onClick={event => changePage(event, currentPage - 1)}>Previous</button>\n                            </li>\n                            <li className={`page-item${currentPage === first && \" active\"}`}><button className=\"page-link\" onClick={event => changePage(event, first)}>{first}</button></li>\n                            <li className={`page-item${currentPage === second ? \" active\" : pageLast < 2 && \" disabled\"}`}><button className=\"page-link\" onClick={event => changePage(event, second)}>{second}</button></li>\n                            <li className={`page-item${currentPage === third ? \" active\" : pageLast < 3 && \" disabled\"}`}><button className=\"page-link\" onClick={event => changePage(event, third)}>{third}</button></li>\n                            <li className={currentPage === pageLast ? \"page-item disabled\" : \"page-item\"}>\n                                <button className=\"page-link\" onClick={event => changePage(event, currentPage + 1)}>Next</button>\n                            </li>\n                        </ul>\n                    </nav>\n                </div>\n                <div className=\"col text-right displaying\">Displaying<b> {firstItem} - {lastItem} </b><i>({pageItems})</i> entries out of {totalItems}</div>\n            </div>\n        ); \n    }\n}","import React, { Component } from 'react';\nimport { faChevronDown, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport _ from 'lodash';\nimport \"../styles/param.css\"\n\nclass Param extends Component{\n\n    componentDidMount() {\n        const { name, handleNextDropdown } = this.props;\n        let thisList = document.getElementById(`list_${name}`);\n        thisList.addEventListener('scroll', (e) => {\n            if (thisList.scrollTop / (thisList.scrollHeight - thisList.clientHeight ) > 0.9) {\n                handleNextDropdown(name);\n            }\n        });\n    }\n\n    render() {\n        const { name, focused, value, placeholder, onChange, onFocus, onHover, options, hover, selection, handleSelect, toggleDropDown } = this.props;\n        return(\n            <div className=\"col\">\n                <label className={_.isEqual(focused, name) || !!selection ? \"drop-label small\" : \"drop-label\"} htmlFor={name}>{placeholder}</label>\n                <p className=\"drop-p\" hidden={!!_.isEqual(focused, name) || selection === ''}>{selection}</p>\n                <div className=\"form-group drop-form-group\">\n                    <input\n                        type=\"text\"\n                        className=\"form-control drop-form-control\"\n                        id={name}\n                        name={name}\n                        value={value}\n                        onChange={onChange}\n                        onFocus={onFocus}\n                    />\n                    <div type=\"button\" className=\"mdb-icon drop-mdb-icon\" onClick={event => toggleDropDown(event, name)}>\n                        <svg><FontAwesomeIcon icon={!!_.isEqual(focused, name) || !!selection ? faTimes : faChevronDown} /></svg>\n                    </div>\n                    <ul id={`list_${name}`} className={!_.isEmpty(options) && _.isEqual(focused, name) ? \"drop-ul_visible\" : \"drop-ul\"}>\n                        {options.map((option, index) =>\n                            <li\n                                key={index}\n                                type=\"button\"\n                                onMouseEnter={event => onHover(event, name, option)}\n                                onClick={event => handleSelect(event, name, option)}\n                                className={option === hover ? \"drop-li_selected\" : \"drop-li\"}\n                                selected={option === hover ? \"selected\" : \"\"}\n                            >\n                                {option}\n                            </li>\n                        )}\n                    </ul>\n                </div>\n            </div>\n            \n        );\n    }\n}\n\nexport default Param;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Skeleton from \"react-loading-skeleton\";\nimport authHeader from \"../../helpers/auth-header\";\n\nimport copyObject from \"../../functions/copyObject\";\nimport getPageSize from \"../../functions/getPageSize\";\nimport arrayRemove from \"../../functions/arrayRemove\";\n\nimport TableSelectAll from '../../components/table-select-all';\nimport TableSelectRow from '../../components/table-select-row';\nimport TableHeader from \"../../components/table-header\";\nimport TableData from \"../../components/table-data\";\nimport TableCheckBoxAdmin from \"../../components/table-check-box-admin\";\nimport Input from \"../../components/input\";\nimport Layout from \"../../components/layout\";\nimport Modal from \"../../components/modal\";\nimport Pagination from \"../../components/pagination\";\nimport Param from \"../../components/param\";\nimport _ from \"lodash\";\n\nexport default class Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: {},\n            element: {},\n            elements: [],\n            sort: {\n                name: \"\",\n                isAscending: true,\n            },\n            dropdown: {\n                name: \"\",\n                email: \"\",\n                isAdmin: \"\"\n            },\n            params: {\n                name: { value: \"\", placeholder: \"Name\", options: [], hover: \"\", page: 0 },\n                email: { value: \"\", placeholder: \"Email\", options: [], hover: \"\", page: 0 },\n                isAdmin: { value: \"\", placeholder: \"isAdmin\", options: [], hover: \"\", page: 0 }\n            },\n            focused: \"\",\n            alert: {\n                type: \"\",\n                message: \"\"\n            },\n            selectAllRows: false,\n            selectedRows: [],\n            retrieving: false,\n            exporting: false,\n            upserting: false,\n            loading: false,\n            loaded: false,\n            submitted: false,\n            showSearch: false,\n            showUser: false,\n            menuItem: \"\",\n            settingsColWidth: {},\n            paginate: {\n                pageSize: 0,\n                currentPage: 1,\n                firstItem: 0,\n                lastItem: 0,\n                pageItems: 0,\n                pageLast: 1,\n                totalItems: 0,\n                first: 1,\n                second: 2,\n                third: 3\n            }\n        };\n\n        this.resize = this.resize.bind(this);\n        this.handleClearAlert = this.handleClearAlert.bind(this);\n        this.setAlert = this.setAlert.bind(this);\n        this.toggleSort = this.toggleSort.bind(this);\n        this.toggleModalSearch = this.toggleModalSearch.bind(this);\n        this.showModal = this.showModal.bind(this);\n        this.hideModal = this.hideModal.bind(this);\n        this.handleChangeUser = this.handleChangeUser.bind(this);\n        // this.handleChangeHeader = this.handleChangeHeader.bind(this);\n        //dropdown\n        this.handleClearFields = this.handleClearFields.bind(this);\n        this.getDropdownOptions = this.getDropdownOptions.bind(this);\n        this.handleChangeDropdown = this.handleChangeDropdown.bind(this);\n        this.handleNextDropdown = this.handleNextDropdown.bind(this);\n        this.handleSelectDropdown = this.handleSelectDropdown.bind(this);\n        this.onFocusDropdown = this.onFocusDropdown.bind(this);\n        this.onHoverDropdown = this.onHoverDropdown.bind(this);\n        this.toggleDropDown = this.toggleDropDown.bind(this);\n        //selection\n        this.toggleSelectAllRow = this.toggleSelectAllRow.bind(this);\n        this.updateSelectedRows = this.updateSelectedRows.bind(this);\n\n        this.getDocuments = this.getDocuments.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n        this.handleOnclick = this.handleOnclick.bind(this);\n        this.colDoubleClick = this.colDoubleClick.bind(this);\n        this.setColWidth = this.setColWidth.bind(this);\n        this.changePage = this.changePage.bind(this);\n        this.generateBody = this.generateBody.bind(this);\n    }\n\n    componentDidMount() {\n        const { paginate } = this.state;\n        let currentUser = JSON.parse(localStorage.getItem(\"user\"));\n        const tableContainer = document.getElementById(\"table-container\");\n        if (!!currentUser) {\n            this.setState({\n                currentUser: currentUser,\n                paginate: {\n                    ...paginate,\n                    pageSize: getPageSize(tableContainer.clientHeight)\n                }\n            }, () => this.getDocuments());\n        } else {\n            localStorage.removeItem(\"user\");\n            window.location.reload(true);\n        }\n    }\n\n    resize() {\n        const { paginate } = this.state;\n        const tableContainer = document.getElementById(\"table-container\");\n        this.setState({\n            paginate: {\n                ...paginate,\n                pageSize: getPageSize(tableContainer.clientHeight)\n            }\n        }, () => this.getDocuments());\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { sort, dropdown, paginate, elements, selectedRows } = this.state;\n        if (sort !== prevState.sort || dropdown !== prevState.dropdown || (paginate.pageSize !== prevState.paginate.pageSize && prevState.paginate.pageSize !== 0)) {\n            this.getDocuments();\n        }\n\n        if (this.state.params.name.value !== prevState.params.name.value) this.getDropdownOptions(\"name\", 0);\n        if (this.state.params.email.value !== prevState.params.email.value) this.getDropdownOptions(\"email\", 0);\n        if (this.state.params.isAdmin.value !== prevState.params.isAdmin.value) this.getDropdownOptions(\"isAdmin\", 0);\n\n        if (elements !== prevState.elements) {\n            let remaining = selectedRows.reduce(function(acc, cur) {\n                let found = elements.find(element => _.isEqual(element._id, cur));\n                if (!_.isUndefined(found)){\n                  acc.push(cur);\n                }\n                return acc;\n            }, []);\n            this.setState({\n                selectedRows: remaining,\n                selectAllRows: false,\n            });\n        }\n    }\n\n    handleClearAlert(event) {\n        event.preventDefault();\n        this.setState({\n            alert: {\n                type: \"\",\n                message: \"\"\n            }\n        });\n    }\n\n    setAlert(type, message) {\n        this.setState({\n            alert: {\n                type: type,\n                message: message\n            }\n        })\n    }\n\n    toggleSort(event, name) {\n        event.preventDefault();\n        const { sort } = this.state;\n        if (sort.name !== name) {\n            this.setState({\n                sort: {\n                    name: name,\n                    isAscending: true\n                }\n            });\n        } else if (!!sort.isAscending) {\n            this.setState({\n                sort: {\n                    name: name,\n                    isAscending: false\n                }\n            });\n        } else {\n            this.setState({\n                sort: {\n                    name: \"\",\n                    isAscending: true\n                }\n            });\n        }\n    }\n\n    toggleModalSearch() {\n        const { showSearch } = this.state;\n        this.setState({\n            showSearch: !showSearch\n        });\n    }\n\n    showModal() {\n        this.setState({\n            element: {\n                name: \"\",\n                email: \"\"\n            },\n            showUser: true\n        });\n    }\n\n    hideModal() {\n        this.setState({\n            element: {\n                name: \"\",\n                email: \"\"\n            },\n            submitted: false,\n            showUser: false\n        });\n    }\n\n    handleChangeUser(event) {\n        const { name, value } = event.target;\n        const { element } = this.state;\n        this.setState({\n            element: {\n                ...element,\n                [name]: value\n            }\n        });\n    }\n\n    // handleChangeHeader(event) {\n    //     const { filter } = this.state;\n    //     const { name, value } = event.target;\n    //     this.setState({\n    //         filter: {\n    //             ...filter,\n    //             [name]: value\n    //         }\n    //     });\n    // }\n\n    getDocuments(nextPage) {\n        const { paginate, sort, dropdown } = this.state;\n        if (!!paginate.pageSize) {\n            this.setState({\n                retrieving: true\n            }, () => {\n                const requestOptions = {\n                    method: \"POST\",\n                    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                        sort: sort,\n                        dropdown: dropdown,\n                        nextPage: nextPage,\n                        pageSize: paginate.pageSize\n                    })\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/users/getAll`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                        retrieving: false,\n                    }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                            // Unauthorized\n                            localStorage.removeItem(\"user\");\n                            window.location.reload(true);\n                        } else if (response.status !== 200) {\n                            this.setState({\n                                alert: {\n                                    type: \"alert-danger\",\n                                    message: resMsg\n                                }\n                            });\n                        } else {\n                            this.setState({\n                                elements: data[0].data,\n                                paginate: {\n                                    ...paginate,\n                                    ...data[0].paginate,\n                                }\n                            });\n                        }\n                    });\n                }))\n                .catch( () => {\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                });\n            });\n        }\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { element, upserting } = this.state;\n        if (!!element.name && !!element.email && !upserting) {\n            this.setState({\n                upserting: true,\n            }, () => {\n                const requestOptions = {\n                    method: !!element._id ? \"PUT\" : \"POST\",\n                    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                        name: element.name,\n                        email: element.email\n                    })\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/users/${!!element._id ? element._id : \"\"}`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                        upserting: false,\n                    }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                            // Unauthorized\n                            localStorage.removeItem(\"user\");\n                            window.location.reload(true);\n                        } else {\n                            this.setState({\n                                alert: {\n                                    type: response.status !== 200 ? \"alert-danger\" : \"alert-success\",\n                                    message: resMsg\n                                }\n                            }, () => {\n                                this.getDocuments();\n                                this.hideModal();\n                            });\n                        }\n                    });\n                    \n                }))\n                .catch( () => {\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                });\n            });\n        }\n    }\n\n    handleDelete(event, _id) {\n        event.preventDefault();\n        const { deleting } = this.state;\n        if (!!_id && !deleting) {\n            this.setState({\n                deleting: true\n            }, () => {\n                const requestOptions = {\n                    method: \"DELETE\",\n                    headers: authHeader()\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/users/${_id}`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                        deleting: false,\n                    }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                            // Unauthorized\n                            localStorage.removeItem(\"user\");\n                            window.location.reload(true);\n                        } else {\n                            this.setState({\n                                alert: {\n                                    type: response.status !== 200 ? \"alert-danger\" : \"alert-success\",\n                                    message: resMsg\n                                }\n                            }, () => {\n                                this.getDocuments();\n                                this.hideModal();\n                            });\n                        }\n                    });\n                }));\n            });\n        }\n    }\n\n    handleOnclick(event, _id) {\n        event.preventDefault();\n        const { elements, currentUser } = this.state;\n        let found = elements.find(element => _.isEqual(element._id, _id));\n        if (!_.isUndefined(found) && !!currentUser.isAdmin) {\n            this.setState({\n                element: {\n                    _id: found._id,\n                    name: found.name,\n                    email: found.email,\n                },\n                showUser: true\n            });\n        }\n    }\n\n    colDoubleClick(event, index) {\n        event.preventDefault();\n        const { settingsColWidth } = this.state;\n        if (settingsColWidth.hasOwnProperty(index)) {\n            let tempArray = copyObject(settingsColWidth);\n            delete tempArray[index];\n            this.setState({ settingsColWidth: tempArray });\n        } else {\n            this.setState({\n                settingsColWidth: {\n                    ...settingsColWidth,\n                    [index]: 10\n                }\n            });\n        }\n    }\n\n    setColWidth(index, width) {\n        const { settingsColWidth } = this.state;\n        this.setState({\n            settingsColWidth: {\n                ...settingsColWidth,\n                [index]: width\n            }\n        });\n    }\n\n    changePage(event, nextPage) {\n        event.preventDefault();\n        const { paginate } = this.state;\n        if ((nextPage > 0) && (nextPage < (paginate.pageLast + 1))) {\n            this.getDocuments(nextPage);\n        }\n    }\n\n    toggleSelectAllRow() {\n        const { selectAllRows, elements } = this.state;\n        if (!_.isEmpty(elements)) {\n          if (!!selectAllRows) {\n            this.setState({\n              selectedRows: [],\n              selectAllRows: false,\n            });\n          } else {\n            this.setState({\n              selectedRows: elements.map(element => element._id),\n              selectAllRows: true\n            });\n          }         \n        }\n    }\n\n    updateSelectedRows(id) {\n        const { selectedRows } = this.state;\n        if (selectedRows.includes(id)) {\n            this.setState({ selectedRows: arrayRemove(selectedRows, id) });\n        } else {\n          this.setState({ selectedRows: [...selectedRows, id] });\n        }       \n    }\n\n    generateBody() {\n        const { elements, retrieving, currentUser, paginate, settingsColWidth, selectAllRows, selectedRows } = this.state;\n        let tempRows = [];\n        if (!_.isEmpty(elements) || !retrieving) {\n            elements.map((element) => {\n                tempRows.push(\n                    <tr key={element._id}>\n                        <TableSelectRow\n                            id={element._id}\n                            selectAllRows={selectAllRows}\n                            selectedRows={selectedRows}\n                            callback={this.updateSelectedRows}\n                        />\n                        <TableData colIndex=\"1\" value={element.name} type=\"text\" settingsColWidth={settingsColWidth} handleClick={this.handleOnclick} eventId={element._id} />\n                        <TableData colIndex=\"2\" value={element.email} type=\"text\" settingsColWidth={settingsColWidth} handleClick={this.handleOnclick} eventId={element._id} />\n                        <td data-type=\"checkbox\">\n                            <TableCheckBoxAdmin\n                                _id={element._id}\n                                checked={element.isAdmin || false}\n                                refreshStore={this.getDocuments}\n                                setAlert={this.setAlert}\n                                disabled={_.isEqual(currentUser._id, element._id) || !currentUser.isAdmin ? true : false}\n                                data-type=\"checkbox\"\n                            />\n                        </td>\n                    </tr>\n                );\n            });\n        } else {\n            for (let i = 0; i < paginate.pageSize; i++) {\n                tempRows.push(\n                    <tr key={i}>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                    </tr>\n                );\n            }\n        }\n        return tempRows;\n    }\n\n    handleClearFields(event) {\n        event.preventDefault();\n        this.setState({\n            sort: {\n                name: \"\",\n                isAscending: true,\n            },\n            dropdown: {\n                name: \"\",\n                email: \"\",\n                isAdmin: \"\"\n            },\n            params: {\n                name: { value: \"\", placeholder: \"Name\", options: [], hover: \"\", page: 0 },\n                email: { value: \"\", placeholder: \"Email\", options: [], hover: \"\", page: 0 },\n                isAdmin: { value: \"\", placeholder: \"isAdmin\", options: [], hover: \"\", page: 0 }\n            },\n            focused: \"\",\n        });\n    }\n\n    getDropdownOptions(key, page) {\n        const { focused, sort, dropdown } = this.state;\n        this.setState({\n            loading: true\n        }, () => {\n            const requestOptions = {\n                method: \"POST\",\n                headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    sort: sort,\n                    dropdown: dropdown,\n                    name: this.state.params[key].value,\n                    page: page || 0\n                })\n            };\n            return fetch(`${process.env.REACT_APP_API_URI}/server/users/getDrop/${key}`, requestOptions)\n            .then(response => response.text().then(text => {\n                this.setState({\n                    loading: false,\n                }, () => {\n                    const data = text && JSON.parse(text);\n                    if (response.status === 200) {\n                        this.setState({\n                            params: {\n                                ...this.state.params,\n                                [key]: {\n                                    ...this.state.params[key],\n                                    options: key !== focused ? [] : page !== 0 ? [ ...this.state.params[key].options, ...data ] : data,\n                                    page\n                                }\n                            }\n                        });\n                    }\n                });\n            }))\n            .catch( () => {\n                localStorage.removeItem(\"user\");\n                window.location.reload(true);\n            });\n        });\n    }\n\n    handleNextDropdown(key) {\n        this.setState({\n            params: {\n                ...this.state.params,\n                [key]: {\n                    ...this.state.params[key],\n                    page: this.state.params[key].page + 1\n                }\n            }\n        }, () => {\n            this.getDropdownOptions(key, this.state.params[key].page)\n        });\n    }\n\n    handleChangeDropdown(event) {\n        event.preventDefault();\n        const { name, value } = event.target;\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    value: value,\n                }\n            },\n            dropdown: {\n                ...this.state.dropdown,\n                [name]: \"\"\n            }\n        });\n    }\n\n    handleSelectDropdown(event, name, selection) {\n        event.preventDefault();\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    value: \"\",\n                    options: [],\n                    hover: \"\",\n                }\n            },\n            dropdown: {\n                ...this.state.dropdown,\n                [name]: selection\n            },\n            focused: \"\"\n        })\n        let myInput = document.getElementById(name);\n        myInput.blur();\n    }\n\n    onFocusDropdown(event) {\n        const { name } = event.target;\n        const { focused } = this.state;\n        if (!!focused) {\n            this.setState({\n                params: {\n                    ...this.state.params,\n                    [name]: {\n                        ...this.state.params[name],\n                        options: [],\n                        value: this.state.dropdown[name],\n                        hover: \"\"\n                    },\n                    [focused]: {\n                       ...this.state.params[focused],\n                       options: [],\n                       value: \"\",\n                       hover: \"\"\n                    },\n                },\n                focused: name, //\n            }, () => this.getDropdownOptions(name, 0));\n        } else {\n            this.setState({\n                params: {\n                    ...this.state.params,\n                    [name]: {\n                        ...this.state.params[name],\n                        options: [],\n                        value: this.state.dropdown[name],\n                        hover: \"\"\n                    }\n                },\n                focused: name,\n            }, () => this.getDropdownOptions(name, 0));\n        }\n    }\n\n    onHoverDropdown(event, name, _id) {\n        event.preventDefault();\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    hover: _id\n                }\n            }\n        });\n    }\n\n    toggleDropDown(event, name) {\n        event.preventDefault();\n        const { params, dropdown, focused } = this.state;\n        if (!!_.isEqual(focused, name) || !!dropdown[name]) {\n            this.setState({\n                params: {\n                    ...params,\n                    [name]: {\n                        ...params[name],\n                        options: [],\n                        value: \"\",\n                        hover: \"\"\n                    }\n                },\n                dropdown: {\n                    ...dropdown,\n                    [name]: \"\"\n                },\n                focused: \"\",\n            });\n            let myInput = document.getElementById(name);\n            myInput.blur();\n        } else {\n            let myInput = document.getElementById(name);\n            myInput.focus();\n            myInput.select();\n        }\n    }\n\n    render() {\n        const { collapsed, toggleCollapse } = this.props;\n        const { alert, menuItem, element, sort, showSearch, showUser, settingsColWidth, upserting, deleting, selectAllRows } = this.state;\n        const { params, focused, dropdown } = this.state;\n        const { currentPage, firstItem, lastItem, pageItems, pageLast, totalItems, first, second, third } = this.state.paginate;\n\n        return (\n            <Layout collapsed={collapsed} toggleCollapse={toggleCollapse} menuItem={menuItem}>\n                {alert.message &&\n                    <div className={`alert ${alert.type}`}>{alert.message}\n                        <button className=\"close\" onClick={(event) => this.handleClearAlert(event)}>\n                            <span aria-hidden=\"true\"><FontAwesomeIcon icon=\"times\" /></span>\n                        </button>\n                    </div>\n                }\n                <div id=\"setting\" className={alert.message ? \"main-section-alert\" : \"main-section\"}>\n                    <div className=\"action-row row\">\n                        <button title=\"Search\" className=\"btn btn-sm btn-leeuwen-blue mr-2\" onClick={this.toggleModalSearch}> {/* style={{height: \"34px\"}} */}\n                            <span><FontAwesomeIcon icon=\"search\" className=\"fa mr-2\" />Search</span>\n                        </button>\n                        <button title=\"Create User\" className=\"btn btn-sm btn-leeuwen-blue\" onClick={this.showModal}> {/* style={{height: \"34px\"}} */}\n                            <span><FontAwesomeIcon icon=\"plus\" className=\"fa mr-2\" />Create User</span>\n                        </button>\n                    </div>\n                    <div className=\"body-section\">\n                        <div className=\"row ml-1 mr-1\" style={{ height: \"calc(100% - 40px)\" }}> {/* borderStyle: \"solid\", borderWidth: \"1px\", borderColor: \"#ddd\", */}\n                            <div id=\"table-container\" className=\"table-responsive custom-table-container\" >\n                                <table className=\"table table-hover table-bordered table-sm\">\n                                    <thead>\n                                        <tr>\n                                            <TableSelectAll\n                                                checked={selectAllRows}\n                                                onChange={this.toggleSelectAllRow}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Name\"\n                                                name=\"name\"\n                                                // width=\"30%\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"0\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Email\"\n                                                name=\"email\"\n                                                // width=\"30%\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"1\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"isAdmin\"\n                                                name=\"isAdmin\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"2\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"full-height\">\n                                        {this.generateBody()}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <Pagination\n                            currentPage={currentPage}\n                            pageLast={pageLast}\n                            first={first}\n                            second={second}\n                            third={third}\n                            firstItem={firstItem}\n                            lastItem={lastItem}\n                            pageItems={pageItems}\n                            totalItems={totalItems}\n                            changePage={this.changePage}\n                        />\n                    </div>\n                    <Modal\n                        show={showSearch}\n                        hideModal={this.toggleModalSearch}\n                        title=\"Search\"\n                        size=\"modal-lg\"\n                    >\n                        <section id=\"fields\" className=\"drop-section\">\n                            <div className=\"row row-cols-1 row-cols-md-2\">\n                                {Object.keys(params).map(key => \n                                    <Param\n                                        key={key}\n                                        name={key}\n                                        isFocused={params[key].isFocused}\n                                        focused={focused}\n                                        value={params[key].value}\n                                        placeholder={params[key].placeholder}\n                                        selection={dropdown[key]}\n                                        options={params[key].options}\n                                        hover={this.state.params[key].hover}\n                                        page={params[key].page}\n                                        onChange={this.handleChangeDropdown}\n                                        handleNextDropdown={this.handleNextDropdown}\n                                        handleSelect={this.handleSelectDropdown}\n                                        onFocus={this.onFocusDropdown}\n                                        onHover={this.onHoverDropdown}\n                                        toggleDropDown={this.toggleDropDown}\n                                    />\n                                )}\n                            </div>\n                        </section>\n                        <div className=\"modal-footer\">\n                            <div className=\"row\">\n                                <button className=\"btn btn-sm btn-leeuwen\" onClick={this.handleClearFields}>\n                                    <span><FontAwesomeIcon icon=\"filter\" className=\"fa mr-2\" />Clear Fields</span>\n                                </button>\n                                <button className=\"btn btn-sm btn-leeuwen-blue ml-2\" onClick={this.toggleModalSearch}>\n                                    <span><FontAwesomeIcon icon={\"times\"} className=\"fa mr-2\" />Close</span>\n                                </button>\n                            </div>\n                        </div>\n                    </Modal>\n\n                    <Modal\n                        show={showUser}\n                        hideModal={this.hideModal}\n                        title={this.state.element._id ? \"Update user\" : \"Add user\"}\n                    >\n                        <div className=\"col-12\">\n                            <form\n                                name=\"form\"\n                                onSubmit={this.handleSubmit}\n                            >\n                                <Input\n                                    title=\"Full Name\"\n                                    name=\"name\"\n                                    type=\"text\"\n                                    value={element.name}\n                                    onChange={this.handleChangeUser}\n                                    inline={false}\n                                    required={true}\n                                />\n                                <Input\n                                    title=\"Email\"\n                                    name=\"email\"\n                                    type=\"email\"\n                                    value={element.email}\n                                    onChange={this.handleChangeUser}\n                                    inline={false}\n                                    required={true}\n                                />\n                                <div className=\"modal-footer\">\n                                    {this.state.element._id ?\n                                        <div className=\"row\">\n                                            <button className=\"btn btn-sm btn-leeuwen\" onClick={(event) => { this.handleDelete(event, this.state.element._id) }}>\n                                                <span><FontAwesomeIcon icon={deleting ? \"spinner\" : \"trash-alt\"} className={deleting ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"} />Delete</span>\n                                            </button>\n                                            <button type=\"submit\" className=\"btn btn-sm btn-leeuwen-blue ml-2\">\n                                                <span><FontAwesomeIcon icon={upserting ? \"spinner\" : \"edit\"} className={upserting ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"} />Update</span>\n                                            </button>\n                                        </div>\n                                        :\n                                        <button type=\"submit\" className=\"btn btn-sm btn-leeuwen-blue btn-full\">\n                                            <span><FontAwesomeIcon icon={upserting ? \"spinner\" : \"plus\"} className={upserting ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"} />Create</span>\n                                        </button>\n                                    }\n                                </div>\n                            </form>\n                        </div>\n                    </Modal>\n                </div>\n            </Layout>\n        );\n    }\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Skeleton from \"react-loading-skeleton\";\nimport authHeader from \"../../helpers/auth-header\";\nimport Layout from \"../../components/layout\";\n\nexport default class User extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            user: {},\n            newPwd: \"\",\n            alert: {\n                type: \"\",\n                message: \"\"\n            },\n            show: false,\n            loading: false,\n            updating: false,\n            menuItem: \"\"\n        }\n        this.handleClearAlert = this.handleClearAlert.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.togglePassword = this.togglePassword.bind(this);\n    }\n\n    componentDidMount() {\n        let user = JSON.parse(localStorage.getItem('user'));\n        if (!!user && !!user._id) {\n            this.setState({\n                loading: true\n            }, () => {\n                const requestOptions = {\n                    method: \"GET\",\n                    headers: {...authHeader(), \"Content-Type\": \"application/json\"},\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/users/${user._id}`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                        loading: false,\n                    }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                        localStorage.removeItem(\"user\");\n                        window.location.reload(true);\n                            } else if (response.status !== 200) {\n                            this.setState({\n                                alert: {\n                                    type: \"alert-danger\",\n                                    message: resMsg\n                                }\n                            });\n                        } else {\n                            this.setState({\n                                user: data.user\n                            });\n                        }\n                    });\n                }).catch( () => {\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                }));\n            });\n        } else {\n            localStorage.removeItem(\"user\");\n            window.location.reload(true);\n        }\n    }\n\n    handleClearAlert(event){\n        event.preventDefault();\n        this.setState({\n          alert: {\n            type: \"\",\n            message: \"\"\n          }\n        });\n    }\n\n    handleChange(event){\n        const { name, type, checked, value } = event.target;\n        this.setState({ [name]: type === \"checkbox\" ? checked : value });\n    }\n\n    togglePassword(event) {\n        event.preventDefault();\n        const { show } = this.state;\n        this.setState({show: !show });\n    }\n\n    handleSubmit(event){\n        event.preventDefault();\n        const { newPwd } = this.state\n        if (newPwd) {\n            this.setState({\n                updating: true\n                }, () => {\n                const requestOptions = {\n                    method: \"PUT\",\n                    headers: {...authHeader(), \"Content-Type\": \"application/json\"},\n                    body: JSON.stringify({ newPwd })\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/users/updatePwd`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({ updating: false }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                            // Unauthorized\n                            localStorage.removeItem(\"user\");\n                            window.location.reload(true);\n                        } else {\n                            this.setState({\n                                newPwd: \"\",\n                                alert: {\n                                    type: response.status !== 200 ? \"alert-danger\" : \"alert-success\",\n                                    message: resMsg\n                                }\n                            });\n                        }\n                    });\n                }))\n                .catch( () => {\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                });\n            });\n        }\n    }\n\n    render() {\n        const { collapsed, toggleCollapse } = this.props;\n        const { alert, user, updating, menuItem, newPwd, show } = this.state;\n        return (\n            <Layout collapsed={collapsed} toggleCollapse={toggleCollapse} menuItem={menuItem}>\n                {alert.message && \n                    <div className={`alert ${alert.type}`}>{alert.message}\n                        <button className=\"close\" onClick={(event) => this.handleClearAlert(event)}>\n                            <span aria-hidden=\"true\"><FontAwesomeIcon icon=\"times\"/></span>\n                        </button>\n                    </div>\n                }\n                <div id=\"user\" className={alert.message ? \"main-section-alert\" : \"main-section\"}>\n                    <div className=\"row\">\n                        <div className=\"col-lg-6 col-md-12 mb-3\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">Profile Info</div>\n                                <div className=\"card-body\" style={{height: \"118.719px\"}}>\n                                    <address style={{fontSize: \"14px\"}}>\n                                        <strong>{!user.hasOwnProperty(\"name\") ?  <Skeleton/> : `${user.name}`} </strong>\n                                        <br/>\n                                        {!user.hasOwnProperty(\"email\") ? <Skeleton/> : <a href={`mailto:${user.email}`}>{user.email}</a>}\n                                        <br/>\n                                        {!user.hasOwnProperty(\"isAdmin\") ? <Skeleton/> : user.isAdmin ? \"Admin\" : \"Regular User\"}\n                                    </address>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"col-lg-6 col-md-12 mb-3\"> \n                            <div className=\"card\">\n                                <div className=\"card-header\">Change Password</div>\n                                <div className=\"card-body\" style={{height: \"118.719px\"}}>\n                                    <form\n                                        onSubmit={this.handleSubmit}\n                                    >\n                                        <div className=\"form-group\">\n                                            <div className=\"input-group input-group-lg input-group-sm\">\n                                                <input\n                                                    className=\"form-control\"\n                                                    id=\"newPwd\"\n                                                    name=\"newPwd\"\n                                                    type={show ? \"text\" : \"password\"}\n                                                    value={newPwd}\n                                                    onChange={this.handleChange}\n                                                    placeholder=\"New Password\"\n                                                    required={true}\n                                                    autoComplete=\"new-password\"\n                                                />\n                                                <div className=\"input-group-append\">\n                                                    <div type=\"button\" className=\"input-group-text\" onClick={event => this.togglePassword(event)}>\n                                                        <FontAwesomeIcon icon={show ? \"eye-slash\" : \"eye\" }/>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-12 text-right p-0\">\n                                            <button type=\"submit\" className=\"btn btn-sm btn-leeuwen-blue\">\n                                                <span><FontAwesomeIcon icon={updating ? \"spinner\" : \"hand-point-right\"} className={updating ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"} />Submit</span>\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </Layout>\n        );\n    }\n}","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n// import getDateFormat from \"../functions/getDateFormat\";\n// import typeToString from \"../functions/typeToString\";\n\nexport default class TabStockLocation extends React.Component {\n\n    render() {\n        const { article, retrievingArticle } = this.props\n        return (\n            <section>\n                <div className=\"table-responsive\" id=\"location\">\n                    <table className=\"table table-hover\">\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"title\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.title}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"address\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.address}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"postal code\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.postalcode}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"city\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.city}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"country\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.country}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"tel\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.tel}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"fax\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.fax}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"email\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.email}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"price info\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.location.price_info}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n        );\n    }\n}","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport getDateFormat from \"../functions/getDateFormat\";\nimport typeToString from \"../functions/typeToString\";\n\nexport default class TabStockArticle extends React.Component {\n\n    render() {\n        const { article, retrievingArticle } = this.props\n        return (\n            <section>\n                <div className=\"table-responsive\" id=\"article\">\n                    <table className=\"table table-hover\">\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"vLunar\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.vlunar}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"artNr\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.artNr}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"qty\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.qty, \"number\", getDateFormat())} ${article.uom}`}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"weight\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.weight, \"number\", getDateFormat())} KG`}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"gip\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.price.gip, \"number\", getDateFormat())} EUR`}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"rv\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.price.rv, \"number\", getDateFormat())} EUR`}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n        );\n    }\n}","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport getDateFormat from \"../functions/getDateFormat\";\nimport typeToString from \"../functions/typeToString\";\n\nexport default class TabStockPurchase extends React.Component {\n\n    render() {\n        const { article, retrievingArticle } = this.props\n        return (\n            <section>\n                <div className=\"table-responsive\" id=\"purchase_info\">\n                    <table className=\"table table-hover\">\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"supplier\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : article.purchase.supplier}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"qty\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.purchase.qty, \"number\", getDateFormat())} ${article.uom}`}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"firstInStock\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.purchase.firstInStock, \"number\", getDateFormat())} ${article.uom}`}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : \"deliveryDate\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : typeToString(article.purchase.deliveryDate, \"date\", getDateFormat())}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n        );\n    }\n}","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\nimport getDateFormat from \"../functions/getDateFormat\";\nimport typeToString from \"../functions/typeToString\";\n\nexport default class TabStockSuppliers extends React.Component {\n\n    render() {\n        const { article, retrievingArticle } = this.props\n        return (\n            <section>\n                <div className=\"table-responsive\" id=\"supplier_info\">\n                    <table className=\"table table-hover\">\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : article.supplier.names[0] || \"supplier 1\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.supplier.qtys[0], \"number\", getDateFormat())} ${article.uom}`}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : article.supplier.names[1] || \"supplier 2\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.supplier.qtys[1], \"number\", getDateFormat())} ${article.uom}`}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : article.supplier.names[2] || \"supplier 3\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.supplier.qtys[2], \"number\", getDateFormat())} ${article.uom}`}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">{retrievingArticle? <Skeleton /> : article.supplier.names[3] || \"supplier 4\"}</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : `${typeToString(article.supplier.qtys[3], \"number\", getDateFormat())} ${article.uom}`}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n        );\n    }\n}","import React from \"react\";\nimport Skeleton from \"react-loading-skeleton\";\n\nexport default class TabStockParams extends React.Component {\n\n    render() {\n        const { article, retrievingArticle } = this.props;\n        const { sizeOne, sizeTwo, sizeThree, wallOne, wallTwo, type, grade, length, end, surface } = article.parameters;\n        return (\n            <section>\n                <div className=\"table-responsive\" id=\"params_info\">\n                    <table className=\"table table-hover\">\n                        <tbody>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">sizeOne</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : sizeOne.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">sizeTwo</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : sizeTwo.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">sizeThree</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : sizeThree.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">wallOne</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : wallOne.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">wallTwo</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : wallTwo.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">type</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : type.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">grade</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : grade.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">length</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : length.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">end</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : end.name}</td>\n                            </tr>\n                            <tr>\n                                <th scope=\"row\" className=\"w-40\">surface</th>\n                                <td className=\"w-60\">{retrievingArticle? <Skeleton /> : surface.name}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </section>\n        );\n    }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Skeleton from \"react-loading-skeleton\";\nimport authHeader from \"../../helpers/auth-header\";\nimport copyObject from \"../../functions/copyObject\";\nimport getPageSize from \"../../functions/getPageSize\";\nimport arrayRemove from \"../../functions/arrayRemove\";\nimport TableSelectAll from '../../components/table-select-all';\nimport TableSelectRow from '../../components/table-select-row';\nimport TableHeader from \"../../components/table-header\";\nimport TableData from \"../../components/table-data\";\nimport Layout from \"../../components/layout\";\nimport Modal from \"../../components/modal\";\nimport Pagination from \"../../components/pagination\";\nimport Param from \"../../components/param\";\nimport TabStockLocation from \"../../components/tab-stock-location\";\nimport TabStockArticle from \"../../components/tab-stock-article\";\nimport TabStockPurchase from \"../../components/tab-stock-purchase\";\nimport TabStockSuppliers from \"../../components/tab-stock-suppliers\";\nimport TabStockParams from \"../../components/tab-stock-params\";\nimport _ from \"lodash\";\n\nexport default class Stock extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: {},\n            article: {\n                opco: \"\",\n                artNr: \"\",\n                description: \"\",\n                vlunar: \"\",\n                weight: 0,\n                uom: \"\",\n                qty: 0,\n                price: {\n                    gip: 0,\n                    rv: 0\n                },\n                purchase: {\n                    supplier: \"\",\n                    qty: 0,\n                    firstInStock: 0,\n                    deliveryDate: null\n                },\n                supplier: {\n                    names: [ \"\", \"\", \"\", \"\" ],\n                    qtys: [ 0, 0, 0, 0 ]\n                },\n                parameters: {\n                    sizeOne: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    sizeTwo: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    sizeThree: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    wallOne: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    wallTwo: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    type: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    grade: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    length: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    end: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    surface: {\n                        name: \"\",\n                        tags: [],\n                    }\n                }\n            },\n            stocks: [],\n            sort: {\n                name: \"\",\n                isAscending: true,\n            },\n            dropdown: {\n                opco: \"\",\n                artNr: \"\",\n                pffType: \"\",\n                steelType: \"\",\n                sizeOne: \"\",\n                sizeTwo: \"\",\n                wallOne: \"\",\n                wallTwo: \"\",\n                type: \"\",\n                grade: \"\",\n                length: \"\",\n                end: \"\",\n                surface: \"\"\n            },\n            params: {\n                pffType: { value: \"\", placeholder: \"PFF type\", options: [], hover: \"\", page: 0 },\n                steelType: { value: \"\", placeholder: \"Steel type\", options: [], hover: \"\", page: 0 },\n                sizeOne: { value: \"\", placeholder: \"Outside diameter 1\", options: [], hover: \"\", page: 0 },\n                sizeTwo: { value: \"\", placeholder: \"Outside diameter 2\", options: [], hover: \"\", page: 0 },\n                wallOne: { value: \"\", placeholder: \"Wall thickness 1\", options: [], hover: \"\", page: 0 },\n                wallTwo: { value: \"\", placeholder: \"Wall thickness 2\", options: [], hover: \"\", page: 0 },\n                type: { value: \"\", placeholder: \"Article type\", options: [], hover: \"\", page: 0 },\n                grade: { value: \"\", placeholder: \"Material grade\", options: [], hover: \"\", page: 0 },\n                length: { value: \"\", placeholder: \"Length\", options: [], hover: \"\", page: 0 },\n                end: { value: \"\", placeholder: \"Ends\", options: [], hover: \"\", page: 0 },\n                surface: { value: \"\", placeholder: \"Surface treatment\", options: [], hover: \"\", page: 0 },\n                opco: { value: \"\", placeholder: \"OPCO\", options: [], hover: \"\", page: 0 },\n                artNr: { value: \"\", placeholder: \"ArtNr\", options: [], hover: \"\", page: 0 },\n            },\n            focused: \"\",\n            alert: {\n                type: \"\",\n                message: \"\"\n            },\n            tabs: [\n                {\n                    index: 0, \n                    id: \"location\",\n                    label: \"Location\",\n                    component: TabStockLocation, \n                    active: true, \n                    isLoaded: false\n                },\n                {\n                    index: 1, \n                    id: \"article\",\n                    label: \"Article\",\n                    component: TabStockArticle, \n                    active: false, \n                    isLoaded: false\n                },\n                {\n                    index: 2, \n                    id: \"suppliers\",\n                    label: \"Suppliers\",\n                    component: TabStockSuppliers, \n                    active: false, \n                    isLoaded: false\n                },\n                {\n                    index: 3,\n                    id: \"purchase\",\n                    label: \"Purchase\",\n                    component: TabStockPurchase,\n                    active: false,\n                    isLoaded: false\n                },\n                {\n                    index: 4,\n                    id: \"params\",\n                    label: \"Params\",\n                    component: TabStockParams,\n                    active: false,\n                    isLoaded: false\n                }\n            ],\n            selectAllRows: false,\n            selectedRows: [],\n            retrievingStocks: false,\n            retrievingArticle: false,\n            exportingParams: false,\n            exportingStocks: false,\n            upserting: false,\n            loading: false,\n            loaded: false,\n            submitted: false,\n            showSearch: false,\n            showArticle: false,\n            menuItem: \"Stock\",\n            settingsColWidth: {},\n            paginate: {\n                pageSize: 0,\n                currentPage: 1,\n                firstItem: 0,\n                lastItem: 0,\n                pageItems: 0,\n                pageLast: 1,\n                totalItems: 0,\n                first: 1,\n                second: 2,\n                third: 3\n            }\n        };\n\n        this.resize = this.resize.bind(this);\n        this.handleClearAlert = this.handleClearAlert.bind(this);\n        this.setAlert = this.setAlert.bind(this);\n        this.toggleSort = this.toggleSort.bind(this);\n        this.toggleModalSearch = this.toggleModalSearch.bind(this);\n        this.handleExport = this.handleExport.bind(this);\n        this.getDocuments = this.getDocuments.bind(this);\n        this.colDoubleClick = this.colDoubleClick.bind(this);\n        this.setColWidth = this.setColWidth.bind(this);\n        this.changePage = this.changePage.bind(this);\n        this.generateBody = this.generateBody.bind(this);\n        //dropdown\n        this.handleClearFields = this.handleClearFields.bind(this);\n        this.getDropdownOptions = this.getDropdownOptions.bind(this);\n        this.handleChangeDropdown = this.handleChangeDropdown.bind(this);\n        this.handleNextDropdown = this.handleNextDropdown.bind(this);\n        this.handleSelectDropdown = this.handleSelectDropdown.bind(this);\n        this.onFocusDropdown = this.onFocusDropdown.bind(this);\n        this.onHoverDropdown = this.onHoverDropdown.bind(this);\n        this.toggleDropDown = this.toggleDropDown.bind(this);\n        //article\n        this.getArticle = this.getArticle.bind(this);\n        this.toggleModalArticle = this.toggleModalArticle.bind(this);\n        //tabs\n        this.handleModalTabClick = this.handleModalTabClick.bind(this);\n        //selection\n        this.toggleSelectAllRow = this.toggleSelectAllRow.bind(this);\n        this.updateSelectedRows = this.updateSelectedRows.bind(this);\n    }\n\n    componentDidMount() {\n        const { paginate, params } = this.state;\n        let currentUser = JSON.parse(localStorage.getItem(\"user\"));\n        const tableContainer = document.getElementById(\"table-container\");\n        if (!!currentUser) {\n            this.setState({\n                currentUser: currentUser,\n                paginate: {\n                    ...paginate,\n                    pageSize: getPageSize(tableContainer.clientHeight)\n                }\n            }, () => this.getDocuments());\n        } else {\n            localStorage.removeItem(\"user\");\n            window.location.reload(true);\n        }\n\n        // const fields = document.getElementById(\"fields\");\n        // fields.addEventListener(\"keydown\", event => {\n        //     if (Object.keys(params).includes(event.target.id)) {\n        //         let name = event.target.id;\n        //         switch(event.key) {\n        //             case \"ArrowDown\":\n        //                 if (!_.isEmpty(this.state.params[name].options)) {\n        //                     let selectedIndex = this.state.params[name].options.findIndex(element => _.isEqual(element, this.state.params[name].hover));\n        //                     if (selectedIndex === -1) {\n        //                         this.setState({\n        //                             params: {\n        //                                 ...this.state.params,\n        //                                 [name]: {\n        //                                     ...this.state.params[name],\n        //                                     hover: this.state.params[name].options[0]\n        //                                 }\n        //                             },\n        //                             dropdown: {\n        //                                 ...this.state.dropdown,\n        //                                 [name]: this.state.params[name].options[0],\n        //                             }\n        //                         });\n        //                     } else if (selectedIndex < this.state.params[name].options.length - 1) {\n        //                         this.setState({\n        //                             params: {\n        //                                 ...this.state.params,\n        //                                 [name]: {\n        //                                     ...this.state.params[name],\n        //                                     hover: this.state.params[name].options[selectedIndex + 1]\n        //                                 }\n        //                             },\n        //                             dropdown: {\n        //                                 ...this.state.dropdown,\n        //                                 [name]: this.state.params[name].options[selectedIndex + 1]\n        //                             }\n        //                         });\n        //                     }\n        //                 }\n        //                 break;\n        //             case \"ArrowUp\":\n        //                 if (!_.isEmpty(this.state.params[name].options)) {\n        //                     let selectedIndex = this.state.params[name].options.findIndex(element => _.isEqual(element, this.state.params[name].hover));\n        //                 if (selectedIndex > 0) {\n        //                         this.setState({\n        //                             params: {\n        //                                 ...this.state.params,\n        //                                 [name]: {\n        //                                     ...this.state.params[name],\n        //                                     hover: this.state.params[name].options[selectedIndex - 1]\n        //                                 }\n        //                             },\n        //                             dropdown: {\n        //                                 ...this.state.dropdown,\n        //                                 [name]: this.state.params[name].options[selectedIndex - 1]\n        //                             }\n        //                         });\n        //                     }\n        //                 }\n        //                 break;\n        //             case \"Enter\":\n        //                 let selected = this.state.params[name].options.find(element => _.isEqual(element, this.state.params[name].hover));\n        //                 if (!_.isUndefined(selected)) {\n        //                     this.setState({\n        //                         params: {\n        //                             ...this.state.params,\n        //                             [name]: {\n        //                                 ...this.state.params[name],\n        //                                 options: [],\n        //                                 value: \"\",\n        //                                 hover: \"\"\n        //                             }\n        //                         },\n        //                         dropdown: {\n        //                             ...this.state.dropdown,\n        //                             [name]: selected._id,\n        //                         },\n        //                         focused: \"\",\n        //                     });\n        //                     let myInput = document.getElementById(name);\n        //                     myInput.blur();\n        //                 }\n        //                 break;\n        //             case \"Escape\":\n        //                 this.setState({\n        //                     params: {\n        //                         ...this.state.params,\n        //                         [name]: {\n        //                             ...this.state.params[name],\n        //                             options: [],\n        //                             value: \"\",\n        //                             hover: \"\",\n        //                         }\n        //                     },\n        //                     dropdown: {\n        //                         ...this.state.dropdown,\n        //                         [name]: \"\",\n        //                     },\n        //                     focused: \"\",\n        //                 });\n        //                 let myInput = document.getElementById(name);\n        //                 myInput.blur();\n        //                 break;\n        //             default: // do nothing;\n        //                 break;\n        //         }\n        //     }\n        // });\n\n    }\n\n    resize() {\n        const { paginate } = this.state;\n        const tableContainer = document.getElementById(\"table-container\");\n        this.setState({\n            paginate: {\n                ...paginate,\n                pageSize: getPageSize(tableContainer.clientHeight)\n            }\n        }, () => this.getDocuments());\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { sort, dropdown, paginate, stocks, selectedRows } = this.state;\n        \n        if (sort !== prevState.sort || dropdown !== prevState.dropdown || (paginate.pageSize !== prevState.paginate.pageSize && prevState.paginate.pageSize !== 0)) {\n            this.getDocuments();\n        }\n        \n        if (this.state.params.pffType.value !== prevState.params.pffType.value) this.getDropdownOptions(\"pffType\", 0);\n        if (this.state.params.steelType.value !== prevState.params.steelType.value) this.getDropdownOptions(\"steelType\", 0);\n        if (this.state.params.sizeOne.value !== prevState.params.sizeOne.value) this.getDropdownOptions(\"sizeOne\", 0);\n        if (this.state.params.sizeTwo.value !== prevState.params.sizeTwo.value) this.getDropdownOptions(\"sizeTwo\", 0);\n        if (this.state.params.wallOne.value !== prevState.params.wallOne.value) this.getDropdownOptions(\"wallOne\", 0);\n        if (this.state.params.wallTwo.value !== prevState.params.wallTwo.value) this.getDropdownOptions(\"wallTwo\", 0);\n        if (this.state.params.type.value !== prevState.params.type.value) this.getDropdownOptions(\"type\", 0);\n        if (this.state.params.grade.value !== prevState.params.grade.value) this.getDropdownOptions(\"grade\", 0);\n        if (this.state.params.length.value !== prevState.params.length.value) this.getDropdownOptions(\"length\", 0);\n        if (this.state.params.end.value !== prevState.params.end.value) this.getDropdownOptions(\"end\", 0);\n        if (this.state.params.surface.value !== prevState.params.surface.value) this.getDropdownOptions(\"surface\", 0);\n        if (this.state.params.opco.value !== prevState.params.opco.value) this.getDropdownOptions(\"opco\", 0);\n        if (this.state.params.artNr.value !== prevState.params.artNr.value) this.getDropdownOptions(\"artNr\", 0);\n\n        if (stocks !== prevState.stocks) {\n            let remaining = selectedRows.reduce(function(acc, cur) {\n                let found = stocks.find(element => _.isEqual(element._id, cur));\n                if (!_.isUndefined(found)){\n                  acc.push(cur);\n                }\n                return acc;\n            }, []);\n            this.setState({\n                selectedRows: remaining,\n                selectAllRows: false,\n            });\n        }\n    }\n\n    handleClearAlert(event) {\n        event.preventDefault();\n        this.setState({\n            alert: {\n                type: \"\",\n                message: \"\"\n            }\n        });\n    }\n\n    setAlert(type, message) {\n        this.setState({\n            alert: {\n                type: type,\n                message: message\n            }\n        })\n    }\n\n    toggleSort(event, name) {\n        event.preventDefault();\n        const { sort } = this.state;\n        if (sort.name !== name) {\n            this.setState({\n                sort: {\n                    name: name,\n                    isAscending: true\n                }\n            });\n        } else if (!!sort.isAscending) {\n            this.setState({\n                sort: {\n                    name: name,\n                    isAscending: false\n                }\n            });\n        } else {\n            this.setState({\n                sort: {\n                    name: \"\",\n                    isAscending: true\n                }\n            });\n        }\n    }\n\n    toggleModalSearch() {\n        const { showSearch } = this.state;\n        this.setState({\n            showSearch: !showSearch\n        });\n    }\n\n    handleExport(event, type) {\n        event.preventDefault();\n        const { sort, dropdown, exportingParams, exportingStocks, selectedRows } = this.state;\n        if ([\"params\", \"stocks\"].includes(type) && !exportingParams && !exportingStocks) {\n            \n            this.setState({\n                exportingParams: type === \"params\" ? true : false,\n                exportingStocks: type === \"stocks\" ? true : false,\n            }, () => {\n                const requestOptions = {\n                    method: \"POST\",\n                    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                        sort: sort,\n                        dropdown: dropdown,\n                        selectedIds: selectedRows\n                    })\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/stocks/export/${type}`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                        exportingParams: type === false,\n                        exportingStocks: type === false,\n                    }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                            // Unauthorized\n                            localStorage.removeItem(\"user\");\n                            window.location.reload(true);\n                        } else if (response.status !== 200) {\n                            this.setState({\n                                alert: {\n                                    type: response.status === 200 ? \"alert-success\" : \"alert-danger\",\n                                    message: resMsg || \"\"\n                                }\n                            });\n                        }\n                    });\n                }))\n                .catch( () => {\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                });\n            });\n        }\n        \n    }\n\n    getDocuments(nextPage) {\n        const {paginate, sort, dropdown} = this.state;\n        if (!!paginate.pageSize) {\n            this.setState({\n                retrievingStocks: true\n            }, () => {\n                const requestOptions = {\n                    method: \"POST\",\n                    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                        sort: sort,\n                        dropdown: dropdown,\n                        nextPage: nextPage,\n                        pageSize: paginate.pageSize\n                    })\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/stocks/getAll`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                        retrievingStocks: false,\n                    }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                            // Unauthorized\n                            localStorage.removeItem(\"user\");\n                            window.location.reload(true);\n                        } else if (response.status !== 200) {\n                            this.setState({\n                                alert: {\n                                    type: \"alert-danger\",\n                                    message: resMsg\n                                }\n                            });\n                        } else {\n                            this.setState({\n                                stocks: data[0].data,\n                                paginate: {\n                                    ...paginate,\n                                    ...data[0].paginate,\n                                }\n                            });\n                        }\n                    });\n                }))\n                .catch( () => {\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                });\n            });\n        }\n    }\n\n    getArticle(event, _id) {\n        event.preventDefault();\n        this.setState({\n            article: {\n                opco: \"\",\n                artNr: \"\",\n                description: \"\",\n                vlunar: \"\",\n                weight: 0,\n                uom: \"\",\n                qty: 0,\n                price: {\n                    gip: 0,\n                    rv: 0\n                },\n                purchase: {\n                    supplier: \"\",\n                    qty: 0,\n                    firstInStock: 0,\n                    deliveryDate: null\n                },\n                supplier: {\n                    names: [ \"\", \"\", \"\", \"\" ],\n                    qtys: [ 0, 0, 0, 0 ]\n                },\n                parameters: {\n                    sizeOne: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    sizeTwo: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    sizeThree: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    wallOne: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    wallTwo: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    type: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    grade: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    length: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    end: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    surface: {\n                        name: \"\",\n                        tags: [],\n                    }\n                }\n            },\n            retrievingArticle: true,\n            showArticle: true\n        }, () => {\n            const requestOptions = {\n                method: \"GET\",\n                headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n            };\n            return fetch(`${process.env.REACT_APP_API_URI}/server/stocks/${_id}`, requestOptions)\n            .then(response => response.text().then(text => {\n                const data = text && JSON.parse(text);\n                const resMsg = (data && data.message) || response.statusText;\n                if (response.status === 401) {\n                    // Unauthorized\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                } else if (response.status !== 200) {\n                    this.setState({\n                        alert: {\n                            type: \"alert-danger\",\n                            message: resMsg,\n                            retrievingArticle: false,\n                        }\n                    });\n                } else {\n                    this.setState({\n                        article: data.article,\n                        retrievingArticle: false,\n                    });\n                }\n            }))\n            .catch( () => {\n                localStorage.removeItem(\"user\");\n                window.location.reload(true);\n            });\n        });\n    }\n\n    toggleModalArticle(event) {\n        event.preventDefault();\n        const {showArticle} = this.state;\n        this.setState({\n            article: {\n                opco: \"\",\n                artNr: \"\",\n                description: \"\",\n                vlunar: \"\",\n                weight: 0,\n                uom: \"\",\n                qty: 0,\n                price: {\n                    gip: 0,\n                    rv: 0\n                },\n                purchase: {\n                    supplier: \"\",\n                    qty: 0,\n                    firstInStock: 0,\n                    deliveryDate: null\n                },\n                supplier: {\n                    names: [ \"\", \"\", \"\", \"\" ],\n                    qtys: [ 0, 0, 0, 0 ]\n                },\n                parameters: {\n                    sizeOne: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    sizeTwo: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    sizeThree: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    wallOne: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    wallTwo: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    type: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    grade: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    length: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    end: {\n                        name: \"\",\n                        tags: [],\n                    },\n                    surface: {\n                        name: \"\",\n                        tags: [],\n                    }\n                }\n            },\n            tabs: [\n                {\n                    index: 0, \n                    id: \"location\",\n                    label: \"Location\",\n                    component: TabStockLocation, \n                    active: true, \n                    isLoaded: false\n                },\n                {\n                    index: 1, \n                    id: \"article\",\n                    label: \"Article\",\n                    component: TabStockArticle, \n                    active: false, \n                    isLoaded: false\n                },\n                {\n                    index: 2, \n                    id: \"suppliers\",\n                    label: \"Suppliers\",\n                    component: TabStockSuppliers, \n                    active: false, \n                    isLoaded: false\n                },\n                {\n                    index: 3,\n                    id: \"purchase\",\n                    label: \"Purchase\",\n                    component: TabStockPurchase,\n                    active: false,\n                    isLoaded: false\n                },\n                {\n                    index: 4,\n                    id: \"params\",\n                    label: \"Params\",\n                    component: TabStockParams,\n                    active: false,\n                    isLoaded: false\n                }\n            ],\n            retrievingArticle: false,\n            showArticle: !showArticle\n        });\n    }\n\n    colDoubleClick(event, index) {\n        event.preventDefault();\n        const { settingsColWidth } = this.state;\n        if (settingsColWidth.hasOwnProperty(index)) {\n            let tempArray = copyObject(settingsColWidth);\n            delete tempArray[index];\n            this.setState({ settingsColWidth: tempArray });\n        } else {\n            this.setState({\n                settingsColWidth: {\n                    ...settingsColWidth,\n                    [index]: 10\n                }\n            });\n        }\n    }\n\n    setColWidth(index, width) {\n        const { settingsColWidth } = this.state;\n        this.setState({\n            settingsColWidth: {\n                ...settingsColWidth,\n                [index]: width\n            }\n        });\n    }\n\n    changePage(event, nextPage) {\n        event.preventDefault();\n        const { paginate } = this.state;\n        if ((nextPage > 0) && (nextPage < (paginate.pageLast + 1))) {\n            this.getDocuments(nextPage);\n        }\n    }\n\n    toggleSelectAllRow() {\n        const { selectAllRows, stocks } = this.state;\n        if (!_.isEmpty(stocks)) {\n          if (!!selectAllRows) {\n            this.setState({\n              selectedRows: [],\n              selectAllRows: false,\n            });\n          } else {\n            this.setState({\n              selectedRows: stocks.map(stock => stock._id),\n              selectAllRows: true\n            });\n          }         \n        }\n    }\n\n    updateSelectedRows(id) {\n        const { selectedRows } = this.state;\n        if (selectedRows.includes(id)) {\n            this.setState({ selectedRows: arrayRemove(selectedRows, id) });\n        } else {\n          this.setState({ selectedRows: [...selectedRows, id] });\n        }       \n    }\n\n    generateBody() {\n        const { stocks, retrievingStocks, currentUser, paginate, settingsColWidth, selectAllRows, selectedRows } = this.state;\n        let tempRows = [];\n        if (!_.isEmpty(stocks) || !retrievingStocks) {\n            stocks.map((stock) => {\n                tempRows.push(\n                    <tr key={stock._id}>\n                        <TableSelectRow\n                            id={stock._id}\n                            selectAllRows={selectAllRows}\n                            selectedRows={selectedRows}\n                            callback={this.updateSelectedRows}\n                        />\n                        <TableData colIndex=\"0\" value={stock.opco} type=\"text\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        <TableData colIndex=\"1\" value={stock.artNr} type=\"text\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        <TableData colIndex=\"2\" value={stock.description} type=\"text\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        <TableData colIndex=\"3\" value={stock.qty} type=\"number\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        <TableData colIndex=\"4\" value={stock.firstInStock} type=\"number\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        <TableData colIndex=\"5\" value={stock.uom} type=\"text\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        <TableData colIndex=\"6\" value={stock.gip} type=\"number\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        <TableData colIndex=\"7\" value={stock.rv} type=\"number\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        <TableData colIndex=\"8\" value={stock.currency} type=\"text\" settingsColWidth={settingsColWidth} handleClick={this.getArticle} eventId={stock._id} />\n                        \n                    </tr>\n                );\n            });\n        } else {\n            for (let i = 0; i < paginate.pageSize; i++) {\n                tempRows.push(\n                    <tr key={i}>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                    </tr>\n                );\n            }\n        }\n        return tempRows;\n    }\n\n    handleClearFields(event) {\n        event.preventDefault();\n        this.setState({\n            sort: {\n                name: \"\",\n                isAscending: true,\n            },\n            dropdown: {\n                opco: \"\",\n                artNr: \"\",\n                pffType: \"\",\n                steelType: \"\",\n                sizeOne: \"\",\n                sizeTwo: \"\",\n                wallOne: \"\",\n                wallTwo: \"\",\n                type: \"\",\n                grade: \"\",\n                length: \"\",\n                end: \"\",\n                surface: \"\"\n            },\n            params: {\n                pffType: { value: \"\", placeholder: \"PFF type\", options: [], hover: \"\", page: 0 },\n                steelType: { value: \"\", placeholder: \"Steel type\", options: [], hover: \"\", page: 0 },\n                sizeOne: { value: \"\", placeholder: \"Outside diameter 1\", options: [], hover: \"\", page: 0 },\n                sizeTwo: { value: \"\", placeholder: \"Outside diameter 2\", options: [], hover: \"\", page: 0 },\n                wallOne: { value: \"\", placeholder: \"Wall thickness 1\", options: [], hover: \"\", page: 0 },\n                wallTwo: { value: \"\", placeholder: \"Wall thickness 2\", options: [], hover: \"\", page: 0 },\n                type: { value: \"\", placeholder: \"Article type\", options: [], hover: \"\", page: 0 },\n                grade: { value: \"\", placeholder: \"Material grade\", options: [], hover: \"\", page: 0 },\n                length: { value: \"\", placeholder: \"Length\", options: [], hover: \"\", page: 0 },\n                end: { value: \"\", placeholder: \"Ends\", options: [], hover: \"\", page: 0 },\n                surface: { value: \"\", placeholder: \"Surface treatment\", options: [], hover: \"\", page: 0 },\n                opco: { value: \"\", placeholder: \"OPCO\", options: [], hover: \"\", page: 0 },\n                artNr: { value: \"\", placeholder: \"Art Nr\", options: [], hover: \"\", page: 0 },\n            },\n            focused: \"\",\n        });\n    }\n\n    getDropdownOptions(key, page) {\n        const { focused, sort, dropdown } = this.state;\n        this.setState({\n            loading: true\n        }, () => {\n            const requestOptions = {\n                method: \"POST\",\n                headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    sort: sort,\n                    dropdown: dropdown,\n                    name: this.state.params[key].value,\n                    page: page || 0\n                })\n            };\n            return fetch(`${process.env.REACT_APP_API_URI}/server/stocks/getDrop/${key}`, requestOptions)\n            .then(response => response.text().then(text => {\n                this.setState({\n                    loading: false,\n                }, () => {\n                    const data = text && JSON.parse(text);\n                    if (response.status === 200) {\n                        this.setState({\n                            params: {\n                                ...this.state.params,\n                                [key]: {\n                                    ...this.state.params[key],\n                                    options: key !== focused ? [] : page !== 0 ? [ ...this.state.params[key].options, ...data ] : data,\n                                    page\n                                }\n                            }\n                        });\n                    }\n                });\n            }))\n            .catch( () => {\n                localStorage.removeItem(\"user\");\n                window.location.reload(true);\n            });\n        });\n    }\n\n    handleNextDropdown(key) {\n        this.setState({\n            params: {\n                ...this.state.params,\n                [key]: {\n                    ...this.state.params[key],\n                    page: this.state.params[key].page + 1\n                }\n            }\n        }, () => {\n            this.getDropdownOptions(key, this.state.params[key].page)\n        });\n    }\n\n    handleChangeDropdown(event) {\n        event.preventDefault();\n        const { name, value } = event.target;\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    value: value,\n                }\n            },\n            dropdown: {\n                ...this.state.dropdown,\n                [name]: \"\"\n            }\n        });\n    }\n\n    handleSelectDropdown(event, name, selection) {\n        event.preventDefault();\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    value: \"\",\n                    options: [],\n                    hover: \"\",\n                }\n            },\n            dropdown: {\n                ...this.state.dropdown,\n                [name]: selection\n            },\n            focused: \"\"\n        })\n        let myInput = document.getElementById(name);\n        myInput.blur();\n    }\n\n    onFocusDropdown(event) {\n        const { name } = event.target;\n        const { focused } = this.state;\n        if (!!focused) {\n            this.setState({\n                params: {\n                    ...this.state.params,\n                    [name]: {\n                        ...this.state.params[name],\n                        options: [],\n                        value: this.state.dropdown[name],\n                        hover: \"\"\n                    },\n                    [focused]: {\n                       ...this.state.params[focused],\n                       options: [],\n                       value: \"\",\n                       hover: \"\"\n                    },\n                },\n                focused: name, //\n            }, () => this.getDropdownOptions(name, 0));\n        } else {\n            this.setState({\n                params: {\n                    ...this.state.params,\n                    [name]: {\n                        ...this.state.params[name],\n                        options: [],\n                        value: this.state.dropdown[name],\n                        hover: \"\"\n                    }\n                },\n                focused: name,\n            }, () => this.getDropdownOptions(name, 0));\n        }\n    }\n\n    onHoverDropdown(event, name, _id) {\n        event.preventDefault();\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    hover: _id\n                }\n            }\n        });\n    }\n\n    toggleDropDown(event, name) {\n        event.preventDefault();\n        const { params, dropdown, focused } = this.state;\n        if (!!_.isEqual(focused, name) || !!dropdown[name]) {\n            this.setState({\n                params: {\n                    ...params,\n                    [name]: {\n                        ...params[name],\n                        options: [],\n                        value: \"\",\n                        hover: \"\"\n                    }\n                },\n                dropdown: {\n                    ...dropdown,\n                    [name]: \"\"\n                },\n                focused: \"\",\n            });\n            let myInput = document.getElementById(name);\n            myInput.blur();\n        } else {\n            let myInput = document.getElementById(name);\n            myInput.focus();\n            myInput.select();\n        }\n    }\n\n    handleModalTabClick(event, tab){\n        event.preventDefault();\n        const { tabs } = this.state; // 1. Get tabs from state\n        tabs.forEach((t) => {t.active = false}); //2. Reset all tabs\n        tab.isLoaded = true; // 3. set current tab as active\n        tab.active = true;\n        this.setState({\n            ...this.state,\n            tabs // 4. update state\n        })\n    }\n\n    render() {\n        const { collapsed, toggleCollapse } = this.props;\n        const { alert, menuItem, article, retrievingArticle, sort, showSearch, settingsColWidth, exportingParams, exportingStocks, showArticle, tabs, selectAllRows } = this.state;\n        const { params, focused, dropdown } = this.state;\n        const { currentPage, firstItem, lastItem, pageItems, pageLast, totalItems, first, second, third } = this.state.paginate;\n\n        return (\n            <Layout collapsed={collapsed} toggleCollapse={toggleCollapse} menuItem={menuItem}>\n                {alert.message &&\n                    <div className={`alert ${alert.type}`}>{alert.message}\n                        <button className=\"close\" onClick={(event) => this.handleClearAlert(event)}>\n                            <span aria-hidden=\"true\"><FontAwesomeIcon icon=\"times\" /></span>\n                        </button>\n                    </div>\n                }\n                <div id=\"setting\" className={alert.message ? \"main-section-alert\" : \"main-section\"}>\n                    <div className=\"action-row row\">\n                        <button title=\"Search\" className=\"btn btn-sm btn-leeuwen-blue mr-2\" onClick={this.toggleModalSearch}> {/* style={{height: \"34px\"}} */}\n                            <span><FontAwesomeIcon icon=\"search\" className=\"fa mr-2\" />Search</span>\n                        </button>\n                        <button title=\"Export Stock\" className=\"btn btn-sm btn-leeuwen-blue mr-2\" onClick={event => this.handleExport(event, \"stocks\")}> {/* style={{height: \"34px\"}} */}\n                            <span><FontAwesomeIcon icon={exportingStocks ? \"spinner\" : \"file-download\"} className={exportingStocks ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"} />Exp. Stock</span>\n                        </button>\n                        <button title=\"Export Params\" className=\"btn btn-sm btn-leeuwen-blue mr-2\" onClick={event => this.handleExport(event, \"params\")}> {/* style={{height: \"34px\"}} */}\n                            <span><FontAwesomeIcon icon={exportingParams ? \"spinner\" : \"file-download\"} className={exportingParams ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"} />Exp. Params</span>\n                        </button>\n                    </div>\n                    <div className=\"body-section\">\n                        <div className=\"row ml-1 mr-1\" style={{ height: \"calc(100% - 40px)\" }}>\n                            <div id=\"table-container\" className=\"table-responsive custom-table-container\" >\n                                <table className=\"table table-hover table-bordered table-sm\">\n                                    <thead>\n                                        <tr>\n                                            <TableSelectAll\n                                            checked={selectAllRows}\n                                            onChange={this.toggleSelectAllRow}\n                                            />\n                                            <TableHeader\n                                                title=\"opco\"\n                                                name=\"opco\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"0\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                title=\"artNr\"\n                                                name=\"artNr\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"1\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                title=\"description\"\n                                                name=\"description\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"2\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                title=\"qty\"\n                                                name=\"qty\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"3\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                title=\"firstInStock\"\n                                                name=\"firstInStock\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"4\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                title=\"uom\"\n                                                name=\"uom\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"5\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                title=\"gip\"\n                                                name=\"gip\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"6\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                title=\"rv\"\n                                                name=\"rv\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"7\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                title=\"currency\"\n                                                name=\"currency\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"8\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"full-height\">\n                                        {this.generateBody()}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <Pagination\n                            currentPage={currentPage}\n                            pageLast={pageLast}\n                            first={first}\n                            second={second}\n                            third={third}\n                            firstItem={firstItem}\n                            lastItem={lastItem}\n                            pageItems={pageItems}\n                            totalItems={totalItems}\n                            changePage={this.changePage}\n                        />\n                    </div>\n                    <Modal\n                        show={showSearch}\n                        hideModal={this.toggleModalSearch}\n                        title=\"Search\"\n                        size=\"modal-lg\"\n                    >\n                        <section id=\"fields\" className=\"drop-section\">\n                            <div className=\"row row-cols-1 row-cols-md-2\">\n                                {Object.keys(params).map(key => \n                                    <Param\n                                        key={key}\n                                        name={key}\n                                        isFocused={params[key].isFocused}\n                                        focused={focused}\n                                        value={params[key].value}\n                                        placeholder={params[key].placeholder}\n                                        selection={dropdown[key]}\n                                        options={params[key].options}\n                                        hover={this.state.params[key].hover}\n                                        page={params[key].page}\n                                        onChange={this.handleChangeDropdown}\n                                        handleNextDropdown={this.handleNextDropdown}\n                                        handleSelect={this.handleSelectDropdown}\n                                        onFocus={this.onFocusDropdown}\n                                        onHover={this.onHoverDropdown}\n                                        toggleDropDown={this.toggleDropDown}\n                                    />\n                                )}\n                            </div>\n                        </section>\n                        <div className=\"modal-footer\">\n                            <div className=\"row\">\n                                <button className=\"btn btn-sm btn-leeuwen\" onClick={this.handleClearFields}>\n                                    <span><FontAwesomeIcon icon=\"filter\" className=\"fa mr-2\" />Clear Fields</span>\n                                </button>\n                                <button className=\"btn btn-sm btn-leeuwen-blue ml-2\" onClick={this.toggleModalSearch}>\n                                    <span><FontAwesomeIcon icon={\"times\"} className=\"fa mr-2\" />Close</span>\n                                </button>\n                            </div>\n                        </div>\n                    </Modal>\n                    <Modal\n                        show={showArticle}\n                        hideModal={this.toggleModalArticle}\n                        title={article.description ? article.description : \"Article\"}\n                        size=\"modal-lg\"\n                    >\n                        <div id=\"modal-tabs\">\n                            <ul className=\"nav nav-tabs\">\n                                {tabs.map((tab) => \n                                    <li className={tab.active ? \"nav-item active\" : \"nav-item\"} key={tab.index}>\n                                        <a className=\"nav-link\" href={\"#\"+ tab.id} data-toggle=\"tab\" onClick={event => this.handleModalTabClick(event,tab)} id={tab.id + \"-tab\"} aria-controls={tab.id} role=\"tab\" draggable=\"false\">\n                                            {tab.label}\n                                        </a>\n                                    </li>                        \n                                )}\n                            </ul>\n                            <div className=\"tab-content\" id=\"modal-nav-tabContent\">\n                                {alert.message &&\n                                    <div className={`alert ${alert.type}`}>{alert.message}\n                                        <button className=\"close\" onClick={(event) => this.handleClearAlert(event)}>\n                                            <span aria-hidden=\"true\"><FontAwesomeIcon icon=\"times\"/></span>\n                                        </button>\n                                    </div>\n                                }\n                                {tabs.map(tab =>\n                                    <div\n                                        className={tab.active ? \"tab-pane fade show active\" : \"tab-pane fade\"}\n                                        id={tab.id}\n                                        role=\"tabpanel\"\n                                        aria-labelledby={tab.id + \"-tab\"}\n                                        key={tab.index}\n                                    >\n                                        <tab.component \n                                            tab={tab}\n                                            article={article}\n                                            retrievingArticle={retrievingArticle}\n                                        />\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <div className=\"row\">\n                                <button className=\"btn btn-sm btn-leeuwen-blue ml-2\" onClick={this.toggleModalArticle}>\n                                    <span><FontAwesomeIcon icon={\"times\"} className=\"fa mr-2\" />Close</span>\n                                </button>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n            </Layout>\n        );\n    }\n}\n","import React from \"react\";\nimport Layout from \"../../components/layout\";\n\nexport default class BuyOut extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuItem: \"Buy-Out\"\n        }\n    }\n\n    render() {\n        const { menuItem } = this.state;\n        const { toggleCollapse, collapsed } = this.props;\n        return(\n            <Layout collapsed={collapsed} toggleCollapse={toggleCollapse} menuItem={menuItem}>\n\n            </Layout>\n        );\n    }\n}","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { saveAs } from 'file-saver';\nimport authHeader from \"../../helpers/auth-header\";\nimport copyObject from \"../../functions/copyObject\";\nimport getPageSize from \"../../functions/getPageSize\";\nimport arrayRemove from \"../../functions/arrayRemove\";\n\nimport TableSelectAll from '../../components/table-select-all';\nimport TableSelectRow from '../../components/table-select-row';\nimport TableHeader from \"../../components/table-header\";\nimport TableData from \"../../components/table-data\";\nimport Layout from \"../../components/layout\";\nimport Modal from \"../../components/modal\";\nimport Pagination from \"../../components/pagination\";\nimport Param from \"../../components/param\";\nimport _ from \"lodash\";\n\nexport default class Export extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // element: {},\n            elements: [],\n            sort: {\n                name: \"\",\n                isAscending: true,\n            },\n            dropdown: {\n                type:\"\",\n                status:\"\",\n                user:\"\",\n                createdAt:\"\",\n                expiresAt: \"\"\n            },\n            params: {\n                type: { value: \"\", placeholder: \"Type\", options: [], hover: \"\", page: 0 },\n                status: { value: \"\", placeholder: \"Status\", options: [], hover: \"\", page: 0 },\n                user: { value: \"\", placeholder: \"User\", options: [], hover: \"\", page: 0 },\n                createdAt: { value: \"\", placeholder: \"createdAt\", options: [], hover: \"\", page: 0 },\n                expiresAt: { value: \"\", placeholder: \"expiresAt\", options: [], hover: \"\", page: 0 }\n            },\n            focused: \"\",\n            alert: {\n                type: \"\",\n                message: \"\"\n            },\n            selectAllRows: false,\n            selectedRows: [],\n            // exporting: false,\n            retrieving: false,\n            // upserting: false,\n            loading: false,\n            // loaded: false,\n            // submitted: false,\n            showSearch: false,\n            menuItem: \"Export data\",\n            settingsColWidth: {},\n            paginate: {\n                pageSize: 0,\n                currentPage: 1,\n                firstItem: 0,\n                lastItem: 0,\n                pageItems: 0,\n                pageLast: 1,\n                totalItems: 0,\n                first: 1,\n                second: 2,\n                third: 3\n            }\n        };\n\n        this.resize = this.resize.bind(this);\n        this.handleClearAlert = this.handleClearAlert.bind(this);\n        this.setAlert = this.setAlert.bind(this);\n        this.toggleSort = this.toggleSort.bind(this);\n        // this.handleChangeHeader = this.handleChangeHeader.bind(this);\n        this.getDocuments = this.getDocuments.bind(this);\n        this.colDoubleClick = this.colDoubleClick.bind(this);\n        this.setColWidth = this.setColWidth.bind(this);\n        this.changePage = this.changePage.bind(this);\n        this.handleDownlaod = this.handleDownlaod.bind(this);\n        this.generateBody = this.generateBody.bind(this);\n        //dropdown\n        this.toggleModalSearch = this.toggleModalSearch.bind(this);\n        this.handleClearFields = this.handleClearFields.bind(this);\n        this.getDropdownOptions = this.getDropdownOptions.bind(this);\n        this.handleChangeDropdown = this.handleChangeDropdown.bind(this);\n        this.handleNextDropdown = this.handleNextDropdown.bind(this);\n        this.handleSelectDropdown = this.handleSelectDropdown.bind(this);\n        this.onFocusDropdown = this.onFocusDropdown.bind(this);\n        this.onHoverDropdown = this.onHoverDropdown.bind(this);\n        this.toggleDropDown = this.toggleDropDown.bind(this);\n        //selection\n        this.toggleSelectAllRow = this.toggleSelectAllRow.bind(this);\n        this.updateSelectedRows = this.updateSelectedRows.bind(this);\n    }\n\n\n    \n\n    componentDidMount() {\n        const tableContainer = document.getElementById(\"table-container\");\n        this.interval = setInterval(() => this.getDocuments(this.state.paginate.currentPage), 3000);\n        this.setState({\n            paginate: {\n                ...this.state.paginate,\n                pageSize: getPageSize(tableContainer.clientHeight)\n            }\n        }, () => this.getDocuments(this.state.paginate.currentPage));\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    resize() {\n        const tableContainer = document.getElementById(\"table-container\");\n        this.setState({\n            paginate: {\n                ...this.state.paginate,\n                pageSize: getPageSize(tableContainer.clientHeight)\n            }\n        }, () => this.getDocuments(this.state.paginate.currentPage));\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { sort, dropdown, paginate, elements, selectedRows } = this.state;\n        if (sort !== prevState.sort || dropdown !== prevState.dropdown || (paginate.pageSize !== prevState.paginate.pageSize && prevState.paginate.pageSize !== 0)) {\n            this.getDocuments();\n        }\n\n        if (this.state.params.type.value !== prevState.params.type.value) this.getDropdownOptions(\"type\", 0);\n        if (this.state.params.status.value !== prevState.params.status.value) this.getDropdownOptions(\"status\", 0);\n        if (this.state.params.user.value !== prevState.params.user.value) this.getDropdownOptions(\"user\", 0);\n        if (this.state.params.createdAt.value !== prevState.params.createdAt.value) this.getDropdownOptions(\"createdAt\", 0);\n        if (this.state.params.expiresAt.value !== prevState.params.expiresAt.value) this.getDropdownOptions(\"expiresAt\", 0);\n\n        if (elements !== prevState.elements) {\n            let remaining = selectedRows.reduce(function(acc, cur) {\n                let found = elements.find(element => _.isEqual(element._id, cur));\n                if (!_.isUndefined(found)){\n                  acc.push(cur);\n                }\n                return acc;\n            }, []);\n            this.setState({\n                selectedRows: remaining,\n                selectAllRows: false,\n            });\n        }\n    }\n\n    handleClearAlert(event) {\n        event.preventDefault();\n        this.setState({\n            alert: {\n                type: \"\",\n                message: \"\"\n            }\n        });\n    }\n\n    setAlert(type, message) {\n        this.setState({\n            alert: {\n                type: type,\n                message: message\n            }\n        })\n    }\n\n    toggleSort(event, name) {\n        event.preventDefault();\n        const { sort } = this.state;\n        if (sort.name !== name) {\n            this.setState({\n                sort: {\n                    name: name,\n                    isAscending: true\n                }\n            });\n        } else if (!!sort.isAscending) {\n            this.setState({\n                sort: {\n                    name: name,\n                    isAscending: false\n                }\n            });\n        } else {\n            this.setState({\n                sort: {\n                    name: \"\",\n                    isAscending: true\n                }\n            });\n        }\n    }\n\n    // handleChangeHeader(event) {\n    //     const { filter } = this.state;\n    //     const { name, value } = event.target;\n    //     this.setState({\n    //         filter: {\n    //             ...filter,\n    //             [name]: value\n    //         }\n    //     });\n    // }\n\n    toggleModalSearch() {\n        const { showSearch } = this.state;\n        this.setState({\n            showSearch: !showSearch\n        });\n    }\n\n\n\n    getDocuments(nextPage) {\n        const { paginate, sort, dropdown } = this.state;\n        if (!!paginate.pageSize) {\n            this.setState({\n                retrieving: true\n            }, () => {\n                const requestOptions = {\n                    method: \"POST\",\n                    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                        sort: sort,\n                        dropdown: dropdown,\n                        nextPage: nextPage,\n                        pageSize: paginate.pageSize\n                    })\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/exports/getAll`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                        retrieving: false,\n                    }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                            // Unauthorized\n                            localStorage.removeItem(\"user\");\n                            window.location.reload(true);\n                        } else if (response.status !== 200) {\n                            this.setState({\n                                alert: {\n                                    type: \"alert-danger\",\n                                    message: resMsg\n                                }\n                            });\n                        } else {\n                            this.setState({\n                                elements: data[0].data,\n                                paginate: {\n                                    ...paginate,\n                                    ...data[0].paginate,\n                                }\n                            });\n                        }\n                    });\n                }))\n                .catch( () => {\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                });\n            });\n        }\n    }\n\n    colDoubleClick(event, index) {\n        event.preventDefault();\n        const { settingsColWidth } = this.state;\n        if (settingsColWidth.hasOwnProperty(index)) {\n            let tempArray = copyObject(settingsColWidth);\n            delete tempArray[index];\n            this.setState({ settingsColWidth: tempArray });\n        } else {\n            this.setState({\n                settingsColWidth: {\n                    ...settingsColWidth,\n                    [index]: 10\n                }\n            });\n        }\n    }\n\n    setColWidth(index, width) {\n        const { settingsColWidth } = this.state;\n        this.setState({\n            settingsColWidth: {\n                ...settingsColWidth,\n                [index]: width\n            }\n        });\n    }\n\n    changePage(event, nextPage) {\n        event.preventDefault();\n        const { paginate } = this.state;\n        if ((nextPage > 0) && (nextPage < (paginate.pageLast + 1))) {\n            this.getDocuments(nextPage);\n        }\n    }\n\n    toggleSelectAllRow() {\n        const { selectAllRows, elements } = this.state;\n        if (!_.isEmpty(elements)) {\n          if (!!selectAllRows) {\n            this.setState({\n              selectedRows: [],\n              selectAllRows: false,\n            });\n          } else {\n            this.setState({\n              selectedRows: elements.map(element => element._id),\n              selectAllRows: true\n            });\n          }         \n        }\n    }\n\n    updateSelectedRows(id) {\n        const { selectedRows } = this.state;\n        if (selectedRows.includes(id)) {\n            this.setState({ selectedRows: arrayRemove(selectedRows, id) });\n        } else {\n          this.setState({ selectedRows: [...selectedRows, id] });\n        }       \n    }\n\n    handleDownlaod(event, exportId) {\n        event.preventDefault();\n        const { downloadingExport } = this.state;\n        if (!!exportId && !downloadingExport) {\n            this.setState({\n                downloadingExport: true\n            }, () => {\n                const requestOptions = {\n                    method: \"GET\",\n                    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/exports/download/${exportId}`, requestOptions)\n                .then(response => {\n                    this.setState({ downloadingExport: false });\n                    if (!response.ok) {\n                        if (response.status === 401) {\n                            localStorage.removeItem('user');\n                            window.location.reload(true);\n                        } else {\n                            response.text().then(text => {\n                                const data = text && JSON.parse(text);\n                                const resMsg = (data && data.message) || response.statusText;\n                                this.setState({\n                                    alert: {\n                                        type: \"alert-danger\",\n                                        message: resMsg\n                                    },\n                                });\n                            });\n                        }\n                    } else {\n                        response.blob().then(blob => saveAs(blob, \"export.xlsx\"));\n                    }\n                });\n            });\n        }\n    }\n\n    generateBody() {\n        const { elements, retrieving, paginate, settingsColWidth, selectAllRows, selectedRows } = this.state;\n        let tempRows = [];\n        if (!_.isEmpty(elements) || !retrieving) {\n            elements.map((element) => {\n                tempRows.push(\n                    <tr key={element._id}>\n                        <TableSelectRow\n                            id={element._id}\n                            selectAllRows={selectAllRows}\n                            selectedRows={selectedRows}\n                            callback={this.updateSelectedRows}\n                        />\n                        <TableData colIndex=\"1\" value={element.type} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"2\" value={element.user} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"3\" value={element.createdAtX} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"4\" value={element.expiresAtX} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"5\" value={element.status} type=\"text\" settingsColWidth={settingsColWidth} handleDownlaod={this.handleDownlaod} eventId={element._id} />\n                    </tr>\n                );\n            });\n        } else {\n            for (let i = 0; i < paginate.pageSize; i++) {\n                tempRows.push(\n                    <tr key={i}>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                    </tr>\n                );\n            }\n        }\n        return tempRows;\n    }\n\n    handleClearFields(event) {\n        event.preventDefault();\n        this.setState({\n            sort: {\n                name: \"\",\n                isAscending: true,\n            },\n            dropdown: {\n                type:\"\",\n                status:\"\",\n                user:\"\",\n                createdAt:\"\",\n                expiresAt: \"\"\n            },\n            params: {\n                type: { value: \"\", placeholder: \"Type\", options: [], hover: \"\", page: 0 },\n                status: { value: \"\", placeholder: \"Status\", options: [], hover: \"\", page: 0 },\n                user: { value: \"\", placeholder: \"User\", options: [], hover: \"\", page: 0 },\n                createdAt: { value: \"\", placeholder: \"createdAt\", options: [], hover: \"\", page: 0 },\n                expiresAt: { value: \"\", placeholder: \"expiresAt\", options: [], hover: \"\", page: 0 }\n            },\n            focused: \"\",\n        });\n    }\n\n    getDropdownOptions(key, page) {\n        const { focused, sort, dropdown } = this.state;\n        this.setState({\n            loading: true\n        }, () => {\n            const requestOptions = {\n                method: \"POST\",\n                headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    sort: sort,\n                    dropdown: dropdown,\n                    name: this.state.params[key].value,\n                    page: page || 0\n                })\n            };\n            return fetch(`${process.env.REACT_APP_API_URI}/server/exports/getDrop/${key}`, requestOptions)\n            .then(response => response.text().then(text => {\n                this.setState({\n                    loading: false,\n                }, () => {\n                    const data = text && JSON.parse(text);\n                    if (response.status === 200) {\n                        this.setState({\n                            params: {\n                                ...this.state.params,\n                                [key]: {\n                                    ...this.state.params[key],\n                                    options: key !== focused ? [] : page !== 0 ? [ ...this.state.params[key].options, ...data ] : data,\n                                    page\n                                }\n                            }\n                        });\n                    }\n                });\n            }))\n            .catch( () => {\n                localStorage.removeItem(\"user\");\n                window.location.reload(true);\n            });\n        });\n    }\n\n    handleNextDropdown(key) {\n        this.setState({\n            params: {\n                ...this.state.params,\n                [key]: {\n                    ...this.state.params[key],\n                    page: this.state.params[key].page + 1\n                }\n            }\n        }, () => {\n            this.getDropdownOptions(key, this.state.params[key].page)\n        });\n    }\n\n    handleChangeDropdown(event) {\n        event.preventDefault();\n        const { name, value } = event.target;\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    value: value,\n                }\n            },\n            dropdown: {\n                ...this.state.dropdown,\n                [name]: \"\"\n            }\n        });\n    }\n\n    handleSelectDropdown(event, name, selection) {\n        event.preventDefault();\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    value: \"\",\n                    options: [],\n                    hover: \"\",\n                }\n            },\n            dropdown: {\n                ...this.state.dropdown,\n                [name]: selection\n            },\n            focused: \"\"\n        })\n        let myInput = document.getElementById(name);\n        myInput.blur();\n    }\n\n    onFocusDropdown(event) {\n        const { name } = event.target;\n        const { focused } = this.state;\n        if (!!focused) {\n            this.setState({\n                params: {\n                    ...this.state.params,\n                    [name]: {\n                        ...this.state.params[name],\n                        options: [],\n                        value: this.state.dropdown[name],\n                        hover: \"\"\n                    },\n                    [focused]: {\n                       ...this.state.params[focused],\n                       options: [],\n                       value: \"\",\n                       hover: \"\"\n                    },\n                },\n                focused: name, //\n            }, () => this.getDropdownOptions(name, 0));\n        } else {\n            this.setState({\n                params: {\n                    ...this.state.params,\n                    [name]: {\n                        ...this.state.params[name],\n                        options: [],\n                        value: this.state.dropdown[name],\n                        hover: \"\"\n                    }\n                },\n                focused: name,\n            }, () => this.getDropdownOptions(name, 0));\n        }\n    }\n\n    onHoverDropdown(event, name, _id) {\n        event.preventDefault();\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    hover: _id\n                }\n            }\n        });\n    }\n\n    toggleDropDown(event, name) {\n        event.preventDefault();\n        const { params, dropdown, focused } = this.state;\n        if (!!_.isEqual(focused, name) || !!dropdown[name]) {\n            this.setState({\n                params: {\n                    ...params,\n                    [name]: {\n                        ...params[name],\n                        options: [],\n                        value: \"\",\n                        hover: \"\"\n                    }\n                },\n                dropdown: {\n                    ...dropdown,\n                    [name]: \"\"\n                },\n                focused: \"\",\n            });\n            let myInput = document.getElementById(name);\n            myInput.blur();\n        } else {\n            let myInput = document.getElementById(name);\n            myInput.focus();\n            myInput.select();\n        }\n    }\n\n    render() {\n        const { collapsed, toggleCollapse } = this.props;\n        const { alert, menuItem, sort, showSearch, settingsColWidth, selectAllRows } = this.state;\n        const { params, focused, dropdown } = this.state;\n        const { currentPage, firstItem, lastItem, pageItems, pageLast, totalItems, first, second, third } = this.state.paginate;\n\n        return (\n            <Layout collapsed={collapsed} toggleCollapse={toggleCollapse} menuItem={menuItem}>\n                {alert.message &&\n                    <div className={`alert ${alert.type}`}>{alert.message}\n                        <button className=\"close\" onClick={(event) => this.handleClearAlert(event)}>\n                            <span aria-hidden=\"true\"><FontAwesomeIcon icon=\"times\" /></span>\n                        </button>\n                    </div>\n                }\n                <div id=\"setting\" className={alert.message ? \"main-section-alert\" : \"main-section\"}>\n                    <div className=\"action-row row\">\n                        <button title=\"Search\" className=\"btn btn-sm btn-leeuwen-blue mr-2\" onClick={this.toggleModalSearch}> {/* style={{height: \"34px\"}} */}\n                            <span><FontAwesomeIcon icon=\"search\" className=\"fa mr-2\" />Search</span>\n                        </button>\n                    </div>\n                    <div className=\"body-section\">\n                        <div className=\"row ml-1 mr-1\" style={{ height: \"calc(100% - 40px)\" }}> {/* borderStyle: \"solid\", borderWidth: \"1px\", borderColor: \"#ddd\", */}\n                            <div id=\"table-container\" className=\"table-responsive custom-table-container\" >\n                                <table className=\"table table-hover table-bordered table-sm\">\n                                    <thead>\n                                        <tr>\n                                            <TableSelectAll\n                                                checked={selectAllRows}\n                                                onChange={this.toggleSelectAllRow}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Type\"\n                                                name=\"type\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"1\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"User\"\n                                                name=\"user\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"2\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Date\"\n                                                name=\"createdAt\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"3\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Expires\"\n                                                name=\"expiresAt\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"4\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Status\"\n                                                name=\"status\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"5\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"full-height\">\n                                        {this.generateBody()}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <Pagination\n                            currentPage={currentPage}\n                            pageLast={pageLast}\n                            first={first}\n                            second={second}\n                            third={third}\n                            firstItem={firstItem}\n                            lastItem={lastItem}\n                            pageItems={pageItems}\n                            totalItems={totalItems}\n                            changePage={this.changePage}\n                        />\n                    </div>\n                    <Modal\n                        show={showSearch}\n                        hideModal={this.toggleModalSearch}\n                        title=\"Search\"\n                        size=\"modal-lg\"\n                    >\n                        <section id=\"fields\" className=\"drop-section\">\n                            <div className=\"row row-cols-1 row-cols-md-2\">\n                                {Object.keys(params).map(key => \n                                    <Param\n                                        key={key}\n                                        name={key}\n                                        isFocused={params[key].isFocused}\n                                        focused={focused}\n                                        value={params[key].value}\n                                        placeholder={params[key].placeholder}\n                                        selection={dropdown[key]}\n                                        options={params[key].options}\n                                        hover={this.state.params[key].hover}\n                                        page={params[key].page}\n                                        onChange={this.handleChangeDropdown}\n                                        handleNextDropdown={this.handleNextDropdown}\n                                        handleSelect={this.handleSelectDropdown}\n                                        onFocus={this.onFocusDropdown}\n                                        onHover={this.onHoverDropdown}\n                                        toggleDropDown={this.toggleDropDown}\n                                    />\n                                )}\n                            </div>\n                        </section>\n                        <div className=\"modal-footer\">\n                            <div className=\"row\">\n                                <button className=\"btn btn-sm btn-leeuwen\" onClick={this.handleClearFields}>\n                                    <span><FontAwesomeIcon icon=\"filter\" className=\"fa mr-2\" />Clear Fields</span>\n                                </button>\n                                <button className=\"btn btn-sm btn-leeuwen-blue ml-2\" onClick={this.toggleModalSearch}>\n                                    <span><FontAwesomeIcon icon={\"times\"} className=\"fa mr-2\" />Close</span>\n                                </button>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n            </Layout>\n        );\n    }\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { saveAs } from 'file-saver';\n\nimport authHeader from \"../../helpers/auth-header\";\nimport copyObject from \"../../functions/copyObject\";\nimport getPageSize from \"../../functions/getPageSize\";\nimport typeToString from \"../../functions/typeToString\";\nimport getDateFormat from \"../../functions/getDateFormat\";\nimport arrayRemove from \"../../functions/arrayRemove\";\n\nimport TableSelectAll from '../../components/table-select-all';\nimport TableSelectRow from '../../components/table-select-row';\nimport TableHeader from \"../../components/table-header\";\nimport TableData from \"../../components/table-data\";\nimport Layout from \"../../components/layout\";\nimport Modal from \"../../components/modal\";\nimport Pagination from \"../../components/pagination\";\nimport Param from \"../../components/param\";\nimport _ from \"lodash\";\n\nexport default class Import extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            // element: {},\n            elements: [],\n            sort: {\n                name: \"\",\n                isAscending: true,\n            },\n            dropdown: {\n                type: \"\",\n                status: \"\",\n                user: \"\",\n                createdAt: \"\",\n                expiresAt: \"\"\n            },\n            params: {\n                type: { value: \"\", placeholder: \"type\", options: [], hover: \"\", page: 0 },\n                status: { value: \"\", placeholder: \"status\", options: [], hover: \"\", page: 0 },\n                user: { value: \"\", placeholder: \"user\", options: [], hover: \"\", page: 0 },\n                createdAt: { value: \"\", placeholder: \"createdAt\", options: [], hover: \"\", page: 0 },\n                expiresAt: { value: \"\", placeholder: \"expiresAt\", options: [], hover: \"\", page: 0 }\n            },\n            focused: \"\",\n            alert: {\n                type: \"\",\n                message: \"\"\n            },\n            selectAllRows: false,\n            selectedRows: [],\n            retrieving: false,\n            loading: false,\n            //\n            showParam: false,\n            paramName: \"\",\n            paramKey: Date.now(),\n            uploadingParam: false,\n            downloadingParam: false,\n            //\n            showSearch: false,\n            menuItem: \"Import data\",\n            settingsColWidth: {},\n            paginate: {\n                pageSize: 0,\n                currentPage: 1,\n                firstItem: 0,\n                lastItem: 0,\n                pageItems: 0,\n                pageLast: 1,\n                totalItems: 0,\n                first: 1,\n                second: 2,\n                third: 3\n            }\n        };\n\n        this.resize = this.resize.bind(this);\n        this.handleClearAlert = this.handleClearAlert.bind(this);\n        this.setAlert = this.setAlert.bind(this);\n        this.toggleSort = this.toggleSort.bind(this);\n        // this.handleChangeHeader = this.handleChangeHeader.bind(this);\n        this.getDocuments = this.getDocuments.bind(this);\n        this.colDoubleClick = this.colDoubleClick.bind(this);\n        this.setColWidth = this.setColWidth.bind(this);\n        this.changePage = this.changePage.bind(this);\n        this.generateBody = this.generateBody.bind(this);\n        //dropdown\n        this.toggleModalSearch = this.toggleModalSearch.bind(this);\n        this.handleClearFields = this.handleClearFields.bind(this);\n        this.getDropdownOptions = this.getDropdownOptions.bind(this);\n        this.handleChangeDropdown = this.handleChangeDropdown.bind(this);\n        this.handleNextDropdown = this.handleNextDropdown.bind(this);\n        this.handleSelectDropdown = this.handleSelectDropdown.bind(this);\n        this.onFocusDropdown = this.onFocusDropdown.bind(this);\n        this.onHoverDropdown = this.onHoverDropdown.bind(this);\n        this.toggleDropDown = this.toggleDropDown.bind(this);\n        //selection\n        this.toggleSelectAllRow = this.toggleSelectAllRow.bind(this);\n        this.updateSelectedRows = this.updateSelectedRows.bind(this);\n        //DUF param\n        this.toggleParam = this.toggleParam.bind(this);\n        this.handleChangeParam = this.handleChangeParam.bind(this);\n        this.handleDownloadParam = this.handleDownloadParam.bind(this);\n        this.handleUploadParam = this.handleUploadParam.bind(this);\n        this.paramInput = React.createRef();\n    }\n\n\n    \n\n    componentDidMount() {\n        const tableContainer = document.getElementById(\"table-container\");\n        this.interval = setInterval(() => this.getDocuments(this.state.paginate.currentPage), 3000);\n        this.setState({\n            paginate: {\n                ...this.state.paginate,\n                pageSize: getPageSize(tableContainer.clientHeight)\n            }\n        }, () => this.getDocuments(this.state.paginate.currentPage));\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    resize() {\n        const tableContainer = document.getElementById(\"table-container\");\n        this.setState({\n            paginate: {\n                ...this.state.paginate,\n                pageSize: getPageSize(tableContainer.clientHeight)\n            }\n        }, () => this.getDocuments(this.state.paginate.currentPage));\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { sort, dropdown, paginate, elements, selectedRows  } = this.state;\n        if (sort !== prevState.sort || dropdown !== prevState.dropdown || (paginate.pageSize !== prevState.paginate.pageSize && prevState.paginate.pageSize !== 0)) {\n            this.getDocuments();\n        }\n\n        if (this.state.params.type.value !== prevState.params.type.value) this.getDropdownOptions(\"type\", 0);\n        if (this.state.params.status.value !== prevState.params.status.value) this.getDropdownOptions(\"status\", 0);\n        if (this.state.params.user.value !== prevState.params.user.value) this.getDropdownOptions(\"user\", 0);\n        if (this.state.params.createdAt.value !== prevState.params.createdAt.value) this.getDropdownOptions(\"createdAt\", 0);\n        if (this.state.params.expiresAt.value !== prevState.params.expiresAt.value) this.getDropdownOptions(\"expiresAt\", 0);\n\n        if (elements !== prevState.elements) {\n            let remaining = selectedRows.reduce(function(acc, cur) {\n                let found = elements.find(element => _.isEqual(element._id, cur));\n                if (!_.isUndefined(found)){\n                  acc.push(cur);\n                }\n                return acc;\n            }, []);\n            this.setState({\n                selectedRows: remaining,\n                selectAllRows: false,\n            });\n        }\n    }\n\n    handleClearAlert(event) {\n        event.preventDefault();\n        this.setState({\n            alert: {\n                type: \"\",\n                message: \"\"\n            }\n        });\n    }\n\n    setAlert(type, message) {\n        this.setState({\n            alert: {\n                type: type,\n                message: message\n            }\n        })\n    }\n\n    toggleSort(event, name) {\n        event.preventDefault();\n        const { sort } = this.state;\n        if (sort.name !== name) {\n            this.setState({\n                sort: {\n                    name: name,\n                    isAscending: true\n                }\n            });\n        } else if (!!sort.isAscending) {\n            this.setState({\n                sort: {\n                    name: name,\n                    isAscending: false\n                }\n            });\n        } else {\n            this.setState({\n                sort: {\n                    name: \"\",\n                    isAscending: true\n                }\n            });\n        }\n    }\n\n    // handleChangeHeader(event) {\n    //     const { filter } = this.state;\n    //     const { name, value } = event.target;\n    //     this.setState({\n    //         filter: {\n    //             ...filter,\n    //             [name]: value\n    //         }\n    //     });\n    // }\n\n    toggleModalSearch() {\n        const { showSearch } = this.state;\n        this.setState({\n            showSearch: !showSearch\n        });\n    }\n\n    getDocuments(nextPage) {\n        const { paginate, sort, dropdown } = this.state;\n        if (!!paginate.pageSize) {\n            this.setState({\n                retrieving: true\n            }, () => {\n                const requestOptions = {\n                    method: \"POST\",\n                    headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                    body: JSON.stringify({\n                        sort: sort,\n                        dropdown: dropdown,\n                        nextPage: nextPage,\n                        pageSize: paginate.pageSize\n                    })\n                };\n                return fetch(`${process.env.REACT_APP_API_URI}/server/imports/getAll`, requestOptions)\n                .then(response => response.text().then(text => {\n                    this.setState({\n                        retrieving: false,\n                    }, () => {\n                        const data = text && JSON.parse(text);\n                        const resMsg = (data && data.message) || response.statusText;\n                        if (response.status === 401) {\n                            // Unauthorized\n                            localStorage.removeItem(\"user\");\n                            window.location.reload(true);\n                        } else if (response.status !== 200) {\n                            this.setState({\n                                alert: {\n                                    type: \"alert-danger\",\n                                    message: resMsg\n                                }\n                            });\n                        } else {\n                            this.setState({\n                                elements: data[0].data,\n                                paginate: {\n                                    ...paginate,\n                                    ...data[0].paginate,\n                                }\n                            });\n                        }\n                    });\n                }))\n                .catch( () => {\n                    localStorage.removeItem(\"user\");\n                    window.location.reload(true);\n                });\n            });\n        }\n    }\n\n    colDoubleClick(event, index) {\n        event.preventDefault();\n        const { settingsColWidth } = this.state;\n        if (settingsColWidth.hasOwnProperty(index)) {\n            let tempArray = copyObject(settingsColWidth);\n            delete tempArray[index];\n            this.setState({ settingsColWidth: tempArray });\n        } else {\n            this.setState({\n                settingsColWidth: {\n                    ...settingsColWidth,\n                    [index]: 10\n                }\n            });\n        }\n    }\n\n    setColWidth(index, width) {\n        const { settingsColWidth } = this.state;\n        this.setState({\n            settingsColWidth: {\n                ...settingsColWidth,\n                [index]: width\n            }\n        });\n    }\n\n    changePage(event, nextPage) {\n        event.preventDefault();\n        const { paginate } = this.state;\n        if ((nextPage > 0) && (nextPage < (paginate.pageLast + 1))) {\n            this.getDocuments(nextPage);\n        }\n    }\n\n    toggleSelectAllRow() {\n        const { selectAllRows, elements } = this.state;\n        if (!_.isEmpty(elements)) {\n          if (!!selectAllRows) {\n            this.setState({\n              selectedRows: [],\n              selectAllRows: false,\n            });\n          } else {\n            this.setState({\n              selectedRows: elements.map(element => element._id),\n              selectAllRows: true\n            });\n          }         \n        }\n    }\n\n    updateSelectedRows(id) {\n        const { selectedRows } = this.state;\n        if (selectedRows.includes(id)) {\n            this.setState({ selectedRows: arrayRemove(selectedRows, id) });\n        } else {\n          this.setState({ selectedRows: [...selectedRows, id] });\n        }       \n    }\n\n    generateBody() {\n        const { elements, retrieving, paginate, settingsColWidth, selectAllRows, selectedRows } = this.state;\n        let tempRows = [];\n        if (!_.isEmpty(elements) || !retrieving) {\n            elements.map((element) => {\n                tempRows.push(\n                    <tr key={element._id}>\n                        <TableSelectRow\n                            id={element._id}\n                            selectAllRows={selectAllRows}\n                            selectedRows={selectedRows}\n                            callback={this.updateSelectedRows}\n                        />\n                        <TableData colIndex=\"1\" value={element.type} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"2\" value={element.user} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"3\" value={element.message} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"4\" value={element.createdAtX} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"5\" value={element.expiresAtX} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                        <TableData colIndex=\"6\" value={element.status} type=\"text\" settingsColWidth={settingsColWidth} eventId={element._id} />\n                    </tr>\n                );\n            });\n        } else {\n            for (let i = 0; i < paginate.pageSize; i++) {\n                tempRows.push(\n                    <tr key={i}>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                        <td className=\"no-select\"><Skeleton /></td>\n                    </tr>\n                );\n            }\n        }\n        return tempRows;\n    }\n\n    handleClearFields(event) {\n        event.preventDefault();\n        this.setState({\n            sort: {\n                name: \"\",\n                isAscending: true,\n            },\n            dropdown: {\n                type: \"\",\n                status: \"\",\n                user: \"\",\n                createdAt: \"\",\n                expiresAt: \"\"\n            },\n            params: {\n                type: { value: \"\", placeholder: \"type\", options: [], hover: \"\", page: 0 },\n                status: { value: \"\", placeholder: \"status\", options: [], hover: \"\", page: 0 },\n                user: { value: \"\", placeholder: \"user\", options: [], hover: \"\", page: 0 },\n                createdAt: { value: \"\", placeholder: \"createdAt\", options: [], hover: \"\", page: 0 },\n                expiresAt: { value: \"\", placeholder: \"expiresAt\", options: [], hover: \"\", page: 0 }\n            },\n            focused: \"\",\n        });\n    }\n\n    getDropdownOptions(key, page) {\n        const { focused, sort, dropdown } = this.state;\n        this.setState({\n            loading: true\n        }, () => {\n            const requestOptions = {\n                method: \"POST\",\n                headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    sort: sort,\n                    dropdown: dropdown,\n                    name: this.state.params[key].value,\n                    page: page || 0\n                })\n            };\n            return fetch(`${process.env.REACT_APP_API_URI}/server/imports/getDrop/${key}`, requestOptions)\n            .then(response => response.text().then(text => {\n                this.setState({\n                    loading: false,\n                }, () => {\n                    const data = text && JSON.parse(text);\n                    if (response.status === 200) {\n                        this.setState({\n                            params: {\n                                ...this.state.params,\n                                [key]: {\n                                    ...this.state.params[key],\n                                    options: key !== focused ? [] : page !== 0 ? [ ...this.state.params[key].options, ...data ] : data,\n                                    page\n                                }\n                            }\n                        });\n                    }\n                });\n            }))\n            .catch( () => {\n                localStorage.removeItem(\"user\");\n                window.location.reload(true);\n            });\n        });\n    }\n\n    handleNextDropdown(key) {\n        this.setState({\n            params: {\n                ...this.state.params,\n                [key]: {\n                    ...this.state.params[key],\n                    page: this.state.params[key].page + 1\n                }\n            }\n        }, () => {\n            this.getDropdownOptions(key, this.state.params[key].page)\n        });\n    }\n\n    handleChangeDropdown(event) {\n        event.preventDefault();\n        const { name, value } = event.target;\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    value: value,\n                }\n            },\n            dropdown: {\n                ...this.state.dropdown,\n                [name]: \"\"\n            }\n        });\n    }\n\n    handleSelectDropdown(event, name, selection) {\n        event.preventDefault();\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    value: \"\",\n                    options: [],\n                    hover: \"\",\n                }\n            },\n            dropdown: {\n                ...this.state.dropdown,\n                [name]: selection\n            },\n            focused: \"\"\n        })\n        let myInput = document.getElementById(name);\n        myInput.blur();\n    }\n\n    onFocusDropdown(event) {\n        const { name } = event.target;\n        const { focused } = this.state;\n        if (!!focused) {\n            this.setState({\n                params: {\n                    ...this.state.params,\n                    [name]: {\n                        ...this.state.params[name],\n                        options: [],\n                        value: this.state.dropdown[name],\n                        hover: \"\"\n                    },\n                    [focused]: {\n                       ...this.state.params[focused],\n                       options: [],\n                       value: \"\",\n                       hover: \"\"\n                    },\n                },\n                focused: name, //\n            }, () => this.getDropdownOptions(name, 0));\n        } else {\n            this.setState({\n                params: {\n                    ...this.state.params,\n                    [name]: {\n                        ...this.state.params[name],\n                        options: [],\n                        value: this.state.dropdown[name],\n                        hover: \"\"\n                    }\n                },\n                focused: name,\n            }, () => this.getDropdownOptions(name, 0));\n        }\n    }\n\n    onHoverDropdown(event, name, _id) {\n        event.preventDefault();\n        this.setState({\n            params: {\n                ...this.state.params,\n                [name]: {\n                    ...this.state.params[name],\n                    hover: _id\n                }\n            }\n        });\n    }\n\n    toggleDropDown(event, name) {\n        event.preventDefault();\n        const { params, dropdown, focused } = this.state;\n        if (!!_.isEqual(focused, name) || !!dropdown[name]) {\n            this.setState({\n                params: {\n                    ...params,\n                    [name]: {\n                        ...params[name],\n                        options: [],\n                        value: \"\",\n                        hover: \"\"\n                    }\n                },\n                dropdown: {\n                    ...dropdown,\n                    [name]: \"\"\n                },\n                focused: \"\",\n            });\n            let myInput = document.getElementById(name);\n            myInput.blur();\n        } else {\n            let myInput = document.getElementById(name);\n            myInput.focus();\n            myInput.select();\n        }\n    }\n\n    toggleParam(event) {\n        event.preventDefault();\n        const { showParam } = this.state;\n        this.setState({\n            showParam: !showParam,\n            alert: {\n                type:'',\n                message:''\n            },\n            paramKey: Date.now(),\n            paramName: '',\n        });\n    }\n\n    handleChangeParam(event) {\n        if(event.target.files.length > 0) {\n          this.setState({\n              ...this.state,\n              paramName: event.target.files[0].name\n          });\n        }\n    }\n\n    handleDownloadParam(event){\n        event.preventDefault();\n        const { downloadingParam } = this.state;\n        if (!downloadingParam) {\n          this.setState({\n            downloadingParam: true\n          }, () => {\n            const requestOptions = {\n              method: 'GET',\n              headers: { ...authHeader(), 'Content-Type': 'application/json'},\n            }\n            return fetch(`${process.env.REACT_APP_API_URI}/server/imports/downloadParam`, requestOptions)\n            .then(responce => {\n                if (responce.status === 401) {\n                        localStorage.removeItem('user');\n                        window.location.reload(true);\n                } else if (responce.status === 400) {\n                    this.setState({\n                        downloadingParam: false,\n                        alert: {\n                            type: 'alert-danger',\n                            message: 'an error has occured'  \n                        }\n                    });\n                } else {\n                    this.setState({\n                        downloadingParam: false\n                    }, () => responce.blob().then(blob => saveAs(blob, 'duf_params.xlsm')));\n                }\n            })\n            .catch( () => {\n              localStorage.removeItem('user');\n              window.location.reload(true);\n            });\n          });\n        }\n    }\n\n    handleUploadParam(event) {\n        event.preventDefault();\n        const { uploadingParam } = this.state\n        if(!uploadingParam && !!this.paramInput.current) {\n          this.setState({uploadingParam: true});\n          var data = new FormData()\n          data.append('file', this.paramInput.current.files[0]);\n          const requestOptions = {\n              method: 'POST',\n              headers: { ...authHeader()}, //, 'Content-Type': 'application/json'\n              body: data\n          }\n          return fetch(`${process.env.REACT_APP_API_URI}/server/imports/uploadParam`, requestOptions)\n          .then(responce => responce.text().then(text => {\n              const data = text && JSON.parse(text);\n              if (responce.status === 401) {\n                      localStorage.removeItem('user');\n                      window.location.reload(true);\n              } else {\n                this.setState({\n                    uploadingParam: false,\n                    alert: {\n                        type: responce.status === 200 ? 'alert-success' : 'alert-danger',\n                        message: data.message\n                    }\n                }, () => this.getDocument());\n              }\n          }))\n          .catch( () => {\n            localStorage.removeItem('user');\n            window.location.reload(true);\n          });         \n        }\n    }\n\n    render() {\n        const { collapsed, toggleCollapse } = this.props;\n        const { alert, menuItem, sort, showSearch, settingsColWidth, selectAllRows } = this.state;\n        const { params, focused, dropdown } = this.state;\n        const { showParam, paramName, paramKey, uploadingParam, downloadingParam } = this.state;\n        const { currentPage, firstItem, lastItem, pageItems, pageLast, totalItems, first, second, third } = this.state.paginate;\n\n        return (\n            <Layout collapsed={collapsed} toggleCollapse={toggleCollapse} menuItem={menuItem}>\n                {alert.message && !showParam &&\n                    <div className={`alert ${alert.type}`}>{alert.message}\n                        <button className=\"close\" onClick={(event) => this.handleClearAlert(event)}>\n                            <span aria-hidden=\"true\"><FontAwesomeIcon icon=\"times\" /></span>\n                        </button>\n                    </div>\n                }\n                <div id=\"setting\" className={alert.message && !showParam ? \"main-section-alert\" : \"main-section\"}>\n                    <div className=\"action-row row\">\n                        <button title=\"Search\" className=\"btn btn-sm btn-leeuwen-blue mr-2\" onClick={this.toggleModalSearch}> {/* style={{height: \"34px\"}} */}\n                            <span><FontAwesomeIcon icon=\"search\" className=\"fa mr-2\" />Search</span>\n                        </button>\n                        <button title=\"Import Params\" className=\"btn btn-sm btn-leeuwen-blue mr-2\" onClick={this.toggleParam}>\n                            <span><FontAwesomeIcon icon=\"file-download\" className=\"fa mr-2\"/>Params</span>\n                        </button>\n                    </div>\n                    <div className=\"body-section\">\n                        <div className=\"row ml-1 mr-1\" style={{ height: \"calc(100% - 40px)\" }}> {/* borderStyle: \"solid\", borderWidth: \"1px\", borderColor: \"#ddd\", */}\n                            <div id=\"table-container\" className=\"table-responsive custom-table-container\" >\n                                <table className=\"table table-hover table-bordered table-sm\">\n                                    <thead>\n                                        <tr>\n                                            <TableSelectAll\n                                                checked={selectAllRows}\n                                                onChange={this.toggleSelectAllRow}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Type\"\n                                                name=\"type\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"1\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"User\"\n                                                name=\"user\"\n                                                width=\"150px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"2\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Import Logs\"\n                                                name=\"message\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"3\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Date\"\n                                                name=\"createdAt\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"4\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Expires\"\n                                                name=\"expiresAt\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"5\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                            <TableHeader\n                                                type=\"text\"\n                                                title=\"Status\"\n                                                name=\"status\"\n                                                width=\"80px\"\n                                                sort={sort}\n                                                toggleSort={this.toggleSort}\n                                                index=\"6\"\n                                                colDoubleClick={this.colDoubleClick}\n                                                setColWidth={this.setColWidth}\n                                                settingsColWidth={settingsColWidth}\n                                            />\n                                        </tr>\n                                    </thead>\n                                    <tbody className=\"full-height\">\n                                        {this.generateBody()}\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                        <Pagination\n                            currentPage={currentPage}\n                            pageLast={pageLast}\n                            first={first}\n                            second={second}\n                            third={third}\n                            firstItem={firstItem}\n                            lastItem={lastItem}\n                            pageItems={pageItems}\n                            totalItems={totalItems}\n                            changePage={this.changePage}\n                        />\n                    </div>\n                    <Modal\n                        show={showSearch}\n                        hideModal={this.toggleModalSearch}\n                        title=\"Search\"\n                        size=\"modal-lg\"\n                    >\n                        <section id=\"fields\" className=\"drop-section\">\n                            <div className=\"row row-cols-1 row-cols-md-2\">\n                                {Object.keys(params).map(key => \n                                    <Param\n                                        key={key}\n                                        name={key}\n                                        isFocused={params[key].isFocused}\n                                        focused={focused}\n                                        value={params[key].value}\n                                        placeholder={params[key].placeholder}\n                                        selection={dropdown[key]}\n                                        options={params[key].options}\n                                        hover={this.state.params[key].hover}\n                                        page={params[key].page}\n                                        onChange={this.handleChangeDropdown}\n                                        handleNextDropdown={this.handleNextDropdown}\n                                        handleSelect={this.handleSelectDropdown}\n                                        onFocus={this.onFocusDropdown}\n                                        onHover={this.onHoverDropdown}\n                                        toggleDropDown={this.toggleDropDown}\n                                    />\n                                )}\n                            </div>\n                        </section>\n                        <div className=\"modal-footer\">\n                            <div className=\"row\">\n                                <button className=\"btn btn-sm btn-leeuwen\" onClick={this.handleClearFields}>\n                                    <span><FontAwesomeIcon icon=\"filter\" className=\"fa mr-2\" />Clear Fields</span>\n                                </button>\n                                <button className=\"btn btn-sm btn-leeuwen-blue ml-2\" onClick={this.toggleModalSearch}>\n                                    <span><FontAwesomeIcon icon={\"times\"} className=\"fa mr-2\" />Close</span>\n                                </button>\n                            </div>\n                        </div>\n                    </Modal>\n                    <Modal\n                      show={showParam}\n                      hideModal={this.toggleParam}\n                      title=\"Import Params\"\n                      size=\"modal-lg\"\n                    >\n                        <div className=\"col-12\">\n                            {alert.message &&\n                              <div className=\"row\">\n                                <div className=\"col-12\" style={{marginLeft:'0px', marginRight: '0px', paddingLeft: '0px', paddingRight: '0px'}}>\n                                  <div className={`alert ${alert.type}`}> {alert.message}\n                                    <button className=\"close\" onClick={(event) => this.handleClearAlert(event)}>\n                                        <span aria-hidden=\"true\"><FontAwesomeIcon icon=\"times\"/></span>\n                                    </button>\n                                  </div>\n                                </div>\n                              </div>\n                            }\n                            <div className=\"row\">\n                                <form\n                                  className=\"col-12 mb-3 ml-0 mr-0  pl-0 pr-0\"\n                                  encType=\"multipart/form-data\"\n                                  onSubmit={this.handleUploadParam}\n                                >\n                                    <div className=\"input-group\">\n                                      <div className=\"input-group-prepend\">\n                                        <span className=\"input-group-text\" style={{width: '100px', fontSize: \"10px\"}}>Select Document</span>\n                                        <input\n                                            type=\"file\"\n                                            name=\"paramInput\"\n                                            id=\"paramInput\"\n                                            ref={this.paramInput}\n                                            className=\"custom-file-input\"\n                                            style={{opacity: 0, position: 'absolute', pointerEvents: 'none', width: '1px'}}\n                                            onChange={this.handleChangeParam}\n                                            key={paramKey}\n                                        />\n                                      </div>\n                                      <label type=\"text\" className=\"form-control text-left\" htmlFor=\"paramInput\" style={{display:'inline-block', padding: '7px'}}>{paramName ? paramName : 'Choose file...'}</label>\n                                      <div className=\"input-group-append\">\n                                        <button type=\"submit\" className=\"btn btn-sm btn-outline-leeuwen-blue\" disabled={!this.paramInput.current ? true : false}>\n                                            <span><FontAwesomeIcon icon={uploadingParam ? \"spinner\" : \"upload\"} className={uploadingParam ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"}/>Upload</span>\n                                        </button>\n                                        <button className=\"btn btn-sm btn-outline-leeuwen-blue\" onClick={this.handleDownloadParam}>\n                                            <span><FontAwesomeIcon icon={downloadingParam ? \"spinner\" : \"download\"} className={downloadingParam ? \"fa-pulse fa-fw fa mr-2\" : \"fa mr-2\"}/>Download</span>\n                                        </button> \n                                      </div>       \n                                    </div>\n                                </form>                    \n                            </div>\n                        </div>\n                        <div className=\"modal-footer\">\n                            <div className=\"row\">\n                                <button className=\"btn btn-sm btn-leeuwen-blue ml-2\" onClick={this.toggleParam}>\n                                    <span><FontAwesomeIcon icon={\"times\"} className=\"fa mr-2\" />Close</span>\n                                </button>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n            </Layout>\n        );\n    }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/pro-solid-svg-icons\";\nimport { far } from \"@fortawesome/pro-regular-svg-icons\";\nimport { fal } from \"@fortawesome/pro-light-svg-icons\";\n\nimport Login from \"../pages/account/login\";\nimport ReqPwd from \"../pages/account/reqpwd\";\nimport ResetPwd from \"../pages/account/resetpwd\";\nimport NotFound from \"../pages/account/notfound\";\nimport Settings from \"../pages/account/settings\";\nimport User from \"../pages/account/user\";\nimport Stock from \"../pages/home/stock\";\nimport BuyOut from \"../pages/home/buyout\";\nimport Export from \"../pages/home/export\";\nimport Import from \"../pages/home/import\";\n\nlibrary.add(fas, far, fal);\n\nexport default class App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      collapsed: true\n    }\n    this.toggleCollapse = this.toggleCollapse.bind(this);\n  }\n\n  toggleCollapse() {\n    const { collapsed } = this.state;\n    this.setState({ collapsed: !collapsed });\n  }\n  \n  render() {\n    let user = localStorage.getItem(\"user\");\n    let {collapsed} = this.state;\n    return (\n      <Router>\n          <Switch>\n              <Route path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/reqpwd\">\n                <ReqPwd />\n              </Route>\n              <Route path=\"/resetpwd\">\n                <ResetPwd />\n              </Route>\n              <PrivateRoute exact path=\"/\" user={user}>\n                <Stock user={user} collapsed={collapsed} toggleCollapse={this.toggleCollapse}/>\n              </PrivateRoute>\n              <PrivateRoute exact path=\"/buyout\" user={user}>\n                <BuyOut user={user} collapsed={collapsed} toggleCollapse={this.toggleCollapse}/>\n              </PrivateRoute>\n              <PrivateRoute exact path=\"/import\" user={user}>\n                <Import user={user} collapsed={collapsed} toggleCollapse={this.toggleCollapse}/>\n              </PrivateRoute>\n              <PrivateRoute exact path=\"/export\" user={user}>\n                <Export user={user} collapsed={collapsed} toggleCollapse={this.toggleCollapse}/>\n              </PrivateRoute>\n              <PrivateRoute exact path=\"/user\" user={user}>\n                <User user={user} collapsed={collapsed} toggleCollapse={this.toggleCollapse}/>\n              </PrivateRoute>\n              <PrivateRoute exact path=\"/settings\" user={user}>\n                <Settings user={user} collapsed={collapsed} toggleCollapse={this.toggleCollapse}/>\n              </PrivateRoute>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n          </Switch>\n      </Router>\n    );\n  }\n}\n\nfunction PrivateRoute({ children, user, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        user ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  ); \n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/custom.scss\";\nimport \"./styles/main.css\";\nimport App from \"./app/app.js\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}